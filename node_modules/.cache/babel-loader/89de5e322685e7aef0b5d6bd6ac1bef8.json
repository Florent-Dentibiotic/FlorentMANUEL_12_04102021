{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Weight.jsx\",\n    _s = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weight({\n  activitiesData\n}) {\n  _s();\n\n  const [SvgWeight, setSvgWeight] = useState();\n  useEffect(() => {\n    const SvgWeightCreation = () => {\n      const maxKilo = d3.max(activitiesData, d => d.kilo);\n      const max = d3.max(activitiesData, d => d.calories);\n      const x = d3.scaleBand().domain(activitiesData.map(item => item.day)).range([0, 700]);\n      console.log(x('2020-07-07'));\n      const y = d3.scaleLinear().domain([0, max + 50]).range([140, 0]);\n      const yKilo = d3.scaleLinear().domain([maxKilo - 2, maxKilo + 2]).range([140, 0]);\n      const svg = d3.select('.weight-box').append('svg').attr('width', 825).attr('height', 320).attr('class', 'bg-gray-50').style('border-radius', '5px');\n      const graph = svg.append('g').attr('width', 685).attr('height', 140).attr('transform', 'translate(50, 110)');\n      const groupeX = graph.append('g').attr('transform', `translate(0, 140)`);\n      const groupeXmiddle = graph.append('g').attr('transform', `translate(0, 70)`);\n      const groupeXtop = graph.append('g');\n      const groupeY = graph.append('g').attr('transform', `translate(685, 0)`);\n      const groupKilo = graph.append('g');\n      const groupCalories = graph.append('g');\n      const rectKilo = groupKilo.selectAll('rect').data(activitiesData).enter().append('rect').attr('width', 7).attr('height', function (d) {\n        return 140 - d.kilogram;\n      }).attr('fill', '#282D30').attr('x', function (d, i) {\n        return x(i + 1);\n      }).attr('y', function (d) {\n        return d.kilogram;\n      });\n      const rectCalories = groupCalories.selectAll('rect').data(activitiesData).enter().append('rect').attr('width', 7).attr('height', function (d) {\n        return 140 - y(d.calories);\n      }).attr('fill', '#E60000').attr('x', function (d, i) {\n        return x(i + 1) + 12;\n      }).attr('y', function (d) {\n        return y(d.calories);\n      });\n      const axeX = d3.axisBottom(x).tickSize(0);\n      const axeY = d3.axisRight(yKilo);\n      groupeX.call(axeX).style('font-size', '14px');\n      groupeXtop.call(axeX);\n      groupeXmiddle.call(axeX);\n      groupeX.select('.domain').attr('stroke', '#DEDEDE').attr('stroke-width', 1);\n      groupeXtop.select('.domain').attr('stroke', '#DEDEDE').attr('stroke-width', 1).attr('stroke-dasharray', '2');\n      groupeXmiddle.select('.domain').attr('stroke', '#DEDEDE').attr('stroke-width', 1).attr('stroke-dasharray', '2');\n      groupeX.selectAll('.tick text').attr('transform', 'translate(0, 10)').attr('class', 'text-gray-500');\n      groupeXmiddle.selectAll('.tick text').attr('class', 'text-gray-50');\n      groupeXtop.selectAll('.tick text').attr('class', 'text-gray-50');\n      groupeY.call(axeY).style('font-size', '14px');\n      groupeY.select('.domain').attr('stroke-width', 0);\n    };\n\n    setSvgWeight(SvgWeightCreation);\n  }, [SvgWeight, activitiesData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rounded-md col-span-3 weight-box\",\n    children: console.log(activitiesData)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weight, \"p63c14cVOyikPAPvnhVf/vddx7Y=\");\n\n_c = Weight;\nexport default Weight;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weight\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Weight.jsx"],"names":["d3","useState","useEffect","Weight","activitiesData","SvgWeight","setSvgWeight","SvgWeightCreation","maxKilo","max","d","kilo","calories","x","scaleBand","domain","map","item","day","range","console","log","y","scaleLinear","yKilo","svg","select","append","attr","style","graph","groupeX","groupeXmiddle","groupeXtop","groupeY","groupKilo","groupCalories","rectKilo","selectAll","data","enter","kilogram","i","rectCalories","axeX","axisBottom","tickSize","axeY","axisRight","call"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\nimport { useState, useEffect } from 'react'\n\nfunction Weight({ activitiesData }) {\n    const [SvgWeight, setSvgWeight] = useState()\n\n    useEffect(() => {\n        const SvgWeightCreation = () => {\n            const maxKilo = d3.max(activitiesData, (d) => d.kilo)\n            const max = d3.max(activitiesData, (d) => d.calories)\n\n            const x = d3\n                .scaleBand()\n                .domain(activitiesData.map((item) => item.day))\n                .range([0, 700])\n\n            console.log(x('2020-07-07'))\n\n            const y = d3\n                .scaleLinear()\n                .domain([0, max + 50])\n                .range([140, 0])\n\n            const yKilo = d3\n                .scaleLinear()\n                .domain([maxKilo - 2, maxKilo + 2])\n                .range([140, 0])\n\n            const svg = d3\n                .select('.weight-box')\n                .append('svg')\n                .attr('width', 825)\n                .attr('height', 320)\n                .attr('class', 'bg-gray-50')\n                .style('border-radius', '5px')\n\n            const graph = svg\n                .append('g')\n                .attr('width', 685)\n                .attr('height', 140)\n                .attr('transform', 'translate(50, 110)')\n\n            const groupeX = graph\n                .append('g')\n                .attr('transform', `translate(0, 140)`)\n\n            const groupeXmiddle = graph\n                .append('g')\n                .attr('transform', `translate(0, 70)`)\n\n            const groupeXtop = graph.append('g')\n\n            const groupeY = graph\n                .append('g')\n                .attr('transform', `translate(685, 0)`)\n\n            const groupKilo = graph.append('g')\n\n            const groupCalories = graph.append('g')\n\n            const rectKilo = groupKilo\n                .selectAll('rect')\n                .data(activitiesData)\n                .enter()\n                .append('rect')\n                .attr('width', 7)\n                .attr('height', function (d) {\n                    return 140 - d.kilogram\n                })\n                .attr('fill', '#282D30')\n                .attr('x', function (d, i) {\n                    return x(i + 1)\n                })\n                .attr('y', function (d) {\n                    return d.kilogram\n                })\n\n            const rectCalories = groupCalories\n                .selectAll('rect')\n                .data(activitiesData)\n                .enter()\n                .append('rect')\n                .attr('width', 7)\n                .attr('height', function (d) {\n                    return 140 - y(d.calories)\n                })\n                .attr('fill', '#E60000')\n                .attr('x', function (d, i) {\n                    return x(i + 1) + 12\n                })\n                .attr('y', function (d) {\n                    return y(d.calories)\n                })\n\n            const axeX = d3.axisBottom(x).tickSize(0)\n            const axeY = d3.axisRight(yKilo)\n\n            groupeX.call(axeX).style('font-size', '14px')\n            groupeXtop.call(axeX)\n            groupeXmiddle.call(axeX)\n\n            groupeX\n                .select('.domain')\n                .attr('stroke', '#DEDEDE')\n                .attr('stroke-width', 1)\n\n            groupeXtop\n                .select('.domain')\n                .attr('stroke', '#DEDEDE')\n                .attr('stroke-width', 1)\n                .attr('stroke-dasharray', '2')\n\n            groupeXmiddle\n                .select('.domain')\n                .attr('stroke', '#DEDEDE')\n                .attr('stroke-width', 1)\n                .attr('stroke-dasharray', '2')\n\n            groupeX\n                .selectAll('.tick text')\n                .attr('transform', 'translate(0, 10)')\n                .attr('class', 'text-gray-500')\n\n            groupeXmiddle.selectAll('.tick text').attr('class', 'text-gray-50')\n            groupeXtop.selectAll('.tick text').attr('class', 'text-gray-50')\n\n            groupeY.call(axeY).style('font-size', '14px')\n\n            groupeY.select('.domain').attr('stroke-width', 0)\n        }\n\n        setSvgWeight(SvgWeightCreation)\n    }, [SvgWeight, activitiesData])\n\n    return (\n        <div className=\"rounded-md col-span-3 weight-box\">\n            {console.log(activitiesData)}\n        </div>\n    )\n}\n\nexport default Weight\n"]},"metadata":{},"sourceType":"module"}