{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Radar.jsx\",\n    _s = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Radar(userPerformanceData) {\n  _s();\n\n  const [SvgWeight, setSvgWeight] = useState();\n  console.log(userPerformanceData.cardio);\n  useEffect(() => {\n    const SvgWeightCreation = () => {\n      const cardio = userPerformanceData.cardio;\n      const energy = userPerformanceData.energy;\n      const endurance = userPerformanceData.endurance;\n      const strength = userPerformanceData.strength;\n      const speed = userPerformanceData.speed;\n      const intensity = userPerformanceData.intensity;\n      const maxValue = [cardio, energy, endurance, strength, speed, intensity].sort(function (a, b) {\n        return b - a;\n      });\n\n      function resizeValue(size) {\n        return 85 * size / (maxValue[0] + 10);\n      }\n\n      const cardioCoord = {\n        axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(cardio),\n        axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(cardio)\n      };\n      const energyCoord = {\n        axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(energy),\n        axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(energy)\n      };\n      const enduranceCoord = {\n        axeX: 125,\n        axeY: 130 + resizeValue(endurance)\n      };\n      const strengthCoord = {\n        axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(strength),\n        axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(strength)\n      };\n      const speedCoord = {\n        axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(speed),\n        axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(speed)\n      };\n      const intensityCoord = {\n        axeX: 125,\n        axeY: 130 - resizeValue(intensity)\n      };\n\n      function newHexagon(size) {\n        return `M125 ${130 - size}, ${125 + Math.sin(Math.PI / 3) * size} ${130 - Math.cos(Math.PI / 3) * size}, ${125 + Math.sin(Math.PI / 3) * size} ${130 + Math.cos(Math.PI / 3) * size}, 125 ${130 + size}, ${125 - Math.sin(Math.PI / 3) * size} ${130 + Math.cos(Math.PI / 3) * size}, ${125 - Math.sin(Math.PI / 3) * size} ${130 - Math.cos(Math.PI / 3) * size}, 125 ${130 - size}`;\n      }\n\n      const dPath = `M${intensityCoord.axeX} ${intensityCoord.axeY}, ${speedCoord.axeX} ${speedCoord.axeY}, ${strengthCoord.axeX} ${strengthCoord.axeY}, ${enduranceCoord.axeX} ${enduranceCoord.axeY},${energyCoord.axeX} ${energyCoord.axeY}, ${cardioCoord.axeX} ${cardioCoord.axeY}Z`;\n      const svg = d3.select('.radar-box').attr('width', 250).attr('height', 250).style('background', '#000').style('border-radius', '5px');\n      svg.append('g').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('d', newHexagon(85));\n      svg.append('g').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('d', newHexagon(65));\n      svg.append('g').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('d', newHexagon(45));\n      svg.append('g').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('d', newHexagon(25));\n      svg.append('g').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('d', newHexagon(12));\n      svg.append('g') //.attr('transform', 'translate(0, 100)')\n      .append('path').attr('fill', '#FF0101').attr('d', newHexagon(0)).transition().duration(600).attr('d', dPath).attr('class', 'opacity-70');\n    };\n\n    setSvgWeight(SvgWeightCreation);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rounded-md flex items-center justify-center bg-black\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"radar-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"100\",\n        y: \"30\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Intensit\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"210\",\n        y: \"90\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Vitesse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"210\",\n        y: \"170\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Force\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"100\",\n        y: \"230\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Endurance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"5\",\n        y: \"170\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Energie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"5\",\n        y: \"90\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Cardio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Radar, \"p63c14cVOyikPAPvnhVf/vddx7Y=\");\n\n_c = Radar;\nexport default Radar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Radar\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Radar.jsx"],"names":["d3","useEffect","useState","Radar","userPerformanceData","SvgWeight","setSvgWeight","console","log","cardio","SvgWeightCreation","energy","endurance","strength","speed","intensity","maxValue","sort","a","b","resizeValue","size","cardioCoord","axeX","Math","sin","PI","axeY","cos","energyCoord","enduranceCoord","strengthCoord","speedCoord","intensityCoord","newHexagon","dPath","svg","select","attr","style","append","transition","duration"],"mappings":";;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,KAAT,CAAeC,mBAAf,EAAoC;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,EAA1C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,mBAAmB,CAACK,MAAhC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,iBAAiB,GAAG,MAAM;AAC5B,YAAMD,MAAM,GAAGL,mBAAmB,CAACK,MAAnC;AACA,YAAME,MAAM,GAAGP,mBAAmB,CAACO,MAAnC;AACA,YAAMC,SAAS,GAAGR,mBAAmB,CAACQ,SAAtC;AACA,YAAMC,QAAQ,GAAGT,mBAAmB,CAACS,QAArC;AACA,YAAMC,KAAK,GAAGV,mBAAmB,CAACU,KAAlC;AACA,YAAMC,SAAS,GAAGX,mBAAmB,CAACW,SAAtC;AAEA,YAAMC,QAAQ,GAAG,CACbP,MADa,EAEbE,MAFa,EAGbC,SAHa,EAIbC,QAJa,EAKbC,KALa,EAMbC,SANa,EAOfE,IAPe,CAOV,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACnB,eAAOA,CAAC,GAAGD,CAAX;AACH,OATgB,CAAjB;;AAWA,eAASE,WAAT,CAAqBC,IAArB,EAA2B;AACvB,eAAQ,KAAKA,IAAN,IAAeL,QAAQ,CAAC,CAAD,CAAR,GAAc,EAA7B,CAAP;AACH;;AAED,YAAMM,WAAW,GAAG;AAChBC,QAAAA,IAAI,EAAE,MAAMC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBN,WAAW,CAACX,MAAD,CAD/B;AAEhBkB,QAAAA,IAAI,EAAE,MAAMH,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBN,WAAW,CAACX,MAAD;AAF/B,OAApB;AAKA,YAAMoB,WAAW,GAAG;AAChBN,QAAAA,IAAI,EAAE,MAAMC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBN,WAAW,CAACT,MAAD,CAD/B;AAEhBgB,QAAAA,IAAI,EAAE,MAAMH,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBN,WAAW,CAACT,MAAD;AAF/B,OAApB;AAIA,YAAMmB,cAAc,GAAG;AACnBP,QAAAA,IAAI,EAAE,GADa;AAEnBI,QAAAA,IAAI,EAAE,MAAMP,WAAW,CAACR,SAAD;AAFJ,OAAvB;AAIA,YAAMmB,aAAa,GAAG;AAClBR,QAAAA,IAAI,EAAE,MAAMC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBN,WAAW,CAACP,QAAD,CAD7B;AAElBc,QAAAA,IAAI,EAAE,MAAMH,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBN,WAAW,CAACP,QAAD;AAF7B,OAAtB;AAIA,YAAMmB,UAAU,GAAG;AACfT,QAAAA,IAAI,EAAE,MAAMC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBN,WAAW,CAACN,KAAD,CADhC;AAEfa,QAAAA,IAAI,EAAE,MAAMH,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBN,WAAW,CAACN,KAAD;AAFhC,OAAnB;AAIA,YAAMmB,cAAc,GAAG;AACnBV,QAAAA,IAAI,EAAE,GADa;AAEnBI,QAAAA,IAAI,EAAE,MAAMP,WAAW,CAACL,SAAD;AAFJ,OAAvB;;AAKA,eAASmB,UAAT,CAAoBb,IAApB,EAA0B;AACtB,eAAQ,QAAO,MAAMA,IAAK,KACtB,MAAMG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBL,IACjC,IAAG,MAAMG,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBL,IAAK,KACnC,MAAMG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBL,IACjC,IAAG,MAAMG,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBL,IAAK,SAAQ,MAAMA,IAAK,KACtD,MAAMG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBL,IACjC,IAAG,MAAMG,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBL,IAAK,KACnC,MAAMG,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBL,IACjC,IAAG,MAAMG,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACE,EAAL,GAAU,CAAnB,IAAwBL,IAAK,SAAQ,MAAMA,IAAK,EAR1D;AASH;;AAED,YAAMc,KAAK,GAAI,IAAGF,cAAc,CAACV,IAAK,IAAGU,cAAc,CAACN,IAAK,KAAIK,UAAU,CAACT,IAAK,IAAGS,UAAU,CAACL,IAAK,KAAII,aAAa,CAACR,IAAK,IAAGQ,aAAa,CAACJ,IAAK,KAAIG,cAAc,CAACP,IAAK,IAAGO,cAAc,CAACH,IAAK,IAAGE,WAAW,CAACN,IAAK,IAAGM,WAAW,CAACF,IAAK,KAAIL,WAAW,CAACC,IAAK,IAAGD,WAAW,CAACK,IAAK,GAAjR;AAEA,YAAMS,GAAG,GAAGpC,EAAE,CACTqC,MADO,CACA,YADA,EAEPC,IAFO,CAEF,OAFE,EAEO,GAFP,EAGPA,IAHO,CAGF,QAHE,EAGQ,GAHR,EAIPC,KAJO,CAID,YAJC,EAIa,MAJb,EAKPA,KALO,CAKD,eALC,EAKgB,KALhB,CAAZ;AAOAH,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EACKA,MADL,CACY,MADZ,EAEKF,IAFL,CAEU,MAFV,EAEkB,MAFlB,EAGKA,IAHL,CAGU,QAHV,EAGoB,MAHpB,EAIKA,IAJL,CAIU,GAJV,EAIeJ,UAAU,CAAC,EAAD,CAJzB;AAMAE,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EACKA,MADL,CACY,MADZ,EAEKF,IAFL,CAEU,MAFV,EAEkB,MAFlB,EAGKA,IAHL,CAGU,QAHV,EAGoB,MAHpB,EAIKA,IAJL,CAIU,GAJV,EAIeJ,UAAU,CAAC,EAAD,CAJzB;AAMAE,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EACKA,MADL,CACY,MADZ,EAEKF,IAFL,CAEU,MAFV,EAEkB,MAFlB,EAGKA,IAHL,CAGU,QAHV,EAGoB,MAHpB,EAIKA,IAJL,CAIU,GAJV,EAIeJ,UAAU,CAAC,EAAD,CAJzB;AAMAE,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EACKA,MADL,CACY,MADZ,EAEKF,IAFL,CAEU,MAFV,EAEkB,MAFlB,EAGKA,IAHL,CAGU,QAHV,EAGoB,MAHpB,EAIKA,IAJL,CAIU,GAJV,EAIeJ,UAAU,CAAC,EAAD,CAJzB;AAMAE,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EACKA,MADL,CACY,MADZ,EAEKF,IAFL,CAEU,MAFV,EAEkB,MAFlB,EAGKA,IAHL,CAGU,QAHV,EAGoB,MAHpB,EAIKA,IAJL,CAIU,GAJV,EAIeJ,UAAU,CAAC,EAAD,CAJzB;AAMAE,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EACI;AADJ,OAEKA,MAFL,CAEY,MAFZ,EAGKF,IAHL,CAGU,MAHV,EAGkB,SAHlB,EAIKA,IAJL,CAIU,GAJV,EAIeJ,UAAU,CAAC,CAAD,CAJzB,EAKKO,UALL,GAMKC,QANL,CAMc,GANd,EAOKJ,IAPL,CAOU,GAPV,EAOeH,KAPf,EAQKG,IARL,CAQU,OARV,EAQmB,YARnB;AASH,KA7GD;;AA+GAhC,IAAAA,YAAY,CAACI,iBAAD,CAAZ;AACH,GAjHQ,EAiHN,EAjHM,CAAT;AAkHA,sBACI;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAM,QAAA,CAAC,EAAC,KAAR;AAAc,QAAA,CAAC,EAAC,IAAhB;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,QAAQ,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAM,QAAA,CAAC,EAAC,KAAR;AAAc,QAAA,CAAC,EAAC,IAAhB;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,QAAQ,EAAC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAM,QAAA,CAAC,EAAC,KAAR;AAAc,QAAA,CAAC,EAAC,KAAhB;AAAsB,QAAA,IAAI,EAAC,MAA3B;AAAkC,QAAA,QAAQ,EAAC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI;AAAM,QAAA,CAAC,EAAC,KAAR;AAAc,QAAA,CAAC,EAAC,KAAhB;AAAsB,QAAA,IAAI,EAAC,MAA3B;AAAkC,QAAA,QAAQ,EAAC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAaI;AAAM,QAAA,CAAC,EAAC,GAAR;AAAY,QAAA,CAAC,EAAC,KAAd;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,QAAQ,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAgBI;AAAM,QAAA,CAAC,EAAC,GAAR;AAAY,QAAA,CAAC,EAAC,IAAd;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,QAAQ,EAAC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA9IQP,K;;KAAAA,K;AAgJT,eAAeA,KAAf","sourcesContent":["import * as d3 from 'd3'\nimport { useEffect, useState } from 'react'\n\nfunction Radar(userPerformanceData) {\n    const [SvgWeight, setSvgWeight] = useState()\n    console.log(userPerformanceData.cardio)\n\n    useEffect(() => {\n        const SvgWeightCreation = () => {\n            const cardio = userPerformanceData.cardio\n            const energy = userPerformanceData.energy\n            const endurance = userPerformanceData.endurance\n            const strength = userPerformanceData.strength\n            const speed = userPerformanceData.speed\n            const intensity = userPerformanceData.intensity\n\n            const maxValue = [\n                cardio,\n                energy,\n                endurance,\n                strength,\n                speed,\n                intensity,\n            ].sort(function (a, b) {\n                return b - a\n            })\n\n            function resizeValue(size) {\n                return (85 * size) / (maxValue[0] + 10)\n            }\n\n            const cardioCoord = {\n                axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(cardio),\n                axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(cardio),\n            }\n\n            const energyCoord = {\n                axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(energy),\n                axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(energy),\n            }\n            const enduranceCoord = {\n                axeX: 125,\n                axeY: 130 + resizeValue(endurance),\n            }\n            const strengthCoord = {\n                axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(strength),\n                axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(strength),\n            }\n            const speedCoord = {\n                axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(speed),\n                axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(speed),\n            }\n            const intensityCoord = {\n                axeX: 125,\n                axeY: 130 - resizeValue(intensity),\n            }\n\n            function newHexagon(size) {\n                return `M125 ${130 - size}, ${\n                    125 + Math.sin(Math.PI / 3) * size\n                } ${130 - Math.cos(Math.PI / 3) * size}, ${\n                    125 + Math.sin(Math.PI / 3) * size\n                } ${130 + Math.cos(Math.PI / 3) * size}, 125 ${130 + size}, ${\n                    125 - Math.sin(Math.PI / 3) * size\n                } ${130 + Math.cos(Math.PI / 3) * size}, ${\n                    125 - Math.sin(Math.PI / 3) * size\n                } ${130 - Math.cos(Math.PI / 3) * size}, 125 ${130 - size}`\n            }\n\n            const dPath = `M${intensityCoord.axeX} ${intensityCoord.axeY}, ${speedCoord.axeX} ${speedCoord.axeY}, ${strengthCoord.axeX} ${strengthCoord.axeY}, ${enduranceCoord.axeX} ${enduranceCoord.axeY},${energyCoord.axeX} ${energyCoord.axeY}, ${cardioCoord.axeX} ${cardioCoord.axeY}Z`\n\n            const svg = d3\n                .select('.radar-box')\n                .attr('width', 250)\n                .attr('height', 250)\n                .style('background', '#000')\n                .style('border-radius', '5px')\n\n            svg.append('g')\n                .append('path')\n                .attr('fill', 'none')\n                .attr('stroke', '#fff')\n                .attr('d', newHexagon(85))\n\n            svg.append('g')\n                .append('path')\n                .attr('fill', 'none')\n                .attr('stroke', '#fff')\n                .attr('d', newHexagon(65))\n\n            svg.append('g')\n                .append('path')\n                .attr('fill', 'none')\n                .attr('stroke', '#fff')\n                .attr('d', newHexagon(45))\n\n            svg.append('g')\n                .append('path')\n                .attr('fill', 'none')\n                .attr('stroke', '#fff')\n                .attr('d', newHexagon(25))\n\n            svg.append('g')\n                .append('path')\n                .attr('fill', 'none')\n                .attr('stroke', '#fff')\n                .attr('d', newHexagon(12))\n\n            svg.append('g')\n                //.attr('transform', 'translate(0, 100)')\n                .append('path')\n                .attr('fill', '#FF0101')\n                .attr('d', newHexagon(0))\n                .transition()\n                .duration(600)\n                .attr('d', dPath)\n                .attr('class', 'opacity-70')\n        }\n\n        setSvgWeight(SvgWeightCreation)\n    }, [])\n    return (\n        <div className=\"rounded-md flex items-center justify-center bg-black\">\n            <svg className=\"radar-box\">\n                <text x=\"100\" y=\"30\" fill=\"#fff\" fontSize=\"12\">\n                    Intensité\n                </text>\n                <text x=\"210\" y=\"90\" fill=\"#fff\" fontSize=\"12\">\n                    Vitesse\n                </text>\n                <text x=\"210\" y=\"170\" fill=\"#fff\" fontSize=\"12\">\n                    Force\n                </text>\n                <text x=\"100\" y=\"230\" fill=\"#fff\" fontSize=\"12\">\n                    Endurance\n                </text>\n                <text x=\"5\" y=\"170\" fill=\"#fff\" fontSize=\"12\">\n                    Energie\n                </text>\n                <text x=\"5\" y=\"90\" fill=\"#fff\" fontSize=\"12\">\n                    Cardio\n                </text>\n            </svg>\n        </div>\n    )\n}\n\nexport default Radar\n"]},"metadata":{},"sourceType":"module"}