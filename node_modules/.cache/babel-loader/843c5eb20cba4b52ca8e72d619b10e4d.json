{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Weight.jsx\",\n    _s = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weight({\n  activitiesData\n}) {\n  _s();\n\n  const [SvgWeight, setSvgWeight] = useState();\n  useEffect(() => {\n    const SvgWeightCreation = () => {\n      const minKilo = d3.min(activitiesData, d => d.kilogram);\n      const maxKilo = d3.max(activitiesData, d => d.kilogram);\n      const max = d3.max(activitiesData, d => d.calories);\n      const x = d3.scaleBand().domain(activitiesData.map(item => item.day)).range([0, 685]).paddingInner(0.95);\n      const y = d3.scaleLinear().domain([0, max + 50]).range([140, 0]);\n      const yKilo = d3.scaleLinear().domain([minKilo - 1, maxKilo + 1]).range([140, 0]);\n      const svg = d3.select('.weight-box').append('svg').attr('width', 825).attr('height', 320).attr('class', 'bg-gray-50').style('border-radius', '5px');\n      const graph = svg.append('g').attr('width', 685).attr('height', 140).attr('transform', 'translate(50, 110)');\n      const groupeX = graph.append('g').attr('transform', `translate(0, 140)`);\n      const groupeXmiddle = graph.append('g').attr('transform', `translate(0, 70)`);\n      const groupeXtop = graph.append('g');\n      const groupeY = graph.append('g').attr('transform', `translate(700, 0)`);\n      const groupKilo = graph.append('g').attr('transform', `translate(-6, 0)`);\n      const groupCalories = graph.append('g').attr('transform', `translate(6, 0)`);\n      const rectKilo = groupKilo // .selectAll('rect')\n      .selectAll('line').data(activitiesData).enter().append('line').attr('x', function (d) {\n        return x(d.day);\n      }).attr('y', function (d) {\n        return 140 - yKilo(d.kilogram);\n      }).attr('stroke', '#000').attr('stroke-width', '6px'); // .append('rect')\n      // .attr('width', x.bandwidth())\n      // .attr('height', function (d) {\n      //     return 140 - yKilo(d.kilogram)\n      // })\n      // .attr('fill', '#282D30')\n      // .attr('x', function (d) {\n      //     return x(d.day)\n      // })\n      // .attr('y', function (d) {\n      //     return yKilo(d.kilogram)\n      // })\n\n      const rectCalories = groupCalories.selectAll('rect').data(activitiesData).enter().append('rect').attr('width', x.bandwidth()).attr('height', function (d) {\n        return 140 - y(d.calories);\n      }).attr('fill', '#E60000').attr('x1', function (d) {\n        return x(d.day);\n      }).attr('y1', function (d) {\n        return y(d.calories);\n      }).attr('y2', '140');\n      let tickLabels = ['1', '2', '3', '4', '5', '6', '7'];\n      let yTickLabels = [minKilo - 1, (minKilo + maxKilo) / 2, maxKilo + 1];\n      const axeX = d3.axisBottom(x).tickSize(0).tickFormat((d, i) => tickLabels[i]);\n      const axeY = d3.axisRight(yKilo).tickSize(0).ticks(3);\n      groupeX.call(axeX).style('font-size', '14px');\n      groupeXtop.call(axeX);\n      groupeXmiddle.call(axeX);\n      groupeX.select('.domain').attr('stroke', '#DEDEDE').attr('stroke-width', 1);\n      groupeXtop.select('.domain').attr('stroke', '#DEDEDE').attr('stroke-width', 1).attr('stroke-dasharray', '2');\n      groupeXmiddle.select('.domain').attr('stroke', '#DEDEDE').attr('stroke-width', 1).attr('stroke-dasharray', '2');\n      groupeX.selectAll('.tick text').attr('transform', 'translate(0, 10)').attr('class', 'text-gray-500');\n      groupeXmiddle.selectAll('.tick text').attr('class', 'text-gray-50');\n      groupeXtop.selectAll('.tick text').attr('class', 'text-gray-50');\n      groupeY.call(axeY).style('font-size', '14px');\n      groupeY.select('.domain').attr('stroke-width', 0);\n      groupeY.selectAll('.tick text').attr('transform', 'translate(20, 0)').attr('class', 'text-gray-500'); // LÃ©gends\n\n      const GroupLegends = graph.append('g').attr('transform', 'translate(500, 0)');\n    };\n\n    setSvgWeight(SvgWeightCreation);\n  }, [SvgWeight, activitiesData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rounded-md col-span-3 weight-box\",\n    children: console.log(activitiesData)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weight, \"p63c14cVOyikPAPvnhVf/vddx7Y=\");\n\n_c = Weight;\nexport default Weight;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weight\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Weight.jsx"],"names":["d3","useState","useEffect","Weight","activitiesData","SvgWeight","setSvgWeight","SvgWeightCreation","minKilo","min","d","kilogram","maxKilo","max","calories","x","scaleBand","domain","map","item","day","range","paddingInner","y","scaleLinear","yKilo","svg","select","append","attr","style","graph","groupeX","groupeXmiddle","groupeXtop","groupeY","groupKilo","groupCalories","rectKilo","selectAll","data","enter","rectCalories","bandwidth","tickLabels","yTickLabels","axeX","axisBottom","tickSize","tickFormat","i","axeY","axisRight","ticks","call","GroupLegends","console","log"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\nimport { useState, useEffect } from 'react'\n\nfunction Weight({ activitiesData }) {\n    const [SvgWeight, setSvgWeight] = useState()\n\n    useEffect(() => {\n        const SvgWeightCreation = () => {\n            const minKilo = d3.min(activitiesData, (d) => d.kilogram)\n            const maxKilo = d3.max(activitiesData, (d) => d.kilogram)\n            const max = d3.max(activitiesData, (d) => d.calories)\n\n            const x = d3\n                .scaleBand()\n                .domain(activitiesData.map((item) => item.day))\n                .range([0, 685])\n                .paddingInner(0.95)\n\n            const y = d3\n                .scaleLinear()\n                .domain([0, max + 50])\n                .range([140, 0])\n\n            const yKilo = d3\n                .scaleLinear()\n                .domain([minKilo - 1, maxKilo + 1])\n                .range([140, 0])\n\n            const svg = d3\n                .select('.weight-box')\n                .append('svg')\n                .attr('width', 825)\n                .attr('height', 320)\n                .attr('class', 'bg-gray-50')\n                .style('border-radius', '5px')\n\n            const graph = svg\n                .append('g')\n                .attr('width', 685)\n                .attr('height', 140)\n                .attr('transform', 'translate(50, 110)')\n\n            const groupeX = graph\n                .append('g')\n                .attr('transform', `translate(0, 140)`)\n\n            const groupeXmiddle = graph\n                .append('g')\n                .attr('transform', `translate(0, 70)`)\n\n            const groupeXtop = graph.append('g')\n\n            const groupeY = graph\n                .append('g')\n                .attr('transform', `translate(700, 0)`)\n\n            const groupKilo = graph\n                .append('g')\n                .attr('transform', `translate(-6, 0)`)\n\n            const groupCalories = graph\n                .append('g')\n                .attr('transform', `translate(6, 0)`)\n\n            const rectKilo = groupKilo\n                // .selectAll('rect')\n                .selectAll('line')\n                .data(activitiesData)\n                .enter()\n                .append('line')\n                .attr('x', function (d) {\n                    return x(d.day)\n                })\n                .attr('y', function (d) {\n                    return 140 - yKilo(d.kilogram)\n                })\n                .attr('stroke', '#000')\n                .attr('stroke-width', '6px')\n            // .append('rect')\n            // .attr('width', x.bandwidth())\n            // .attr('height', function (d) {\n            //     return 140 - yKilo(d.kilogram)\n            // })\n            // .attr('fill', '#282D30')\n            // .attr('x', function (d) {\n            //     return x(d.day)\n            // })\n            // .attr('y', function (d) {\n            //     return yKilo(d.kilogram)\n            // })\n\n            const rectCalories = groupCalories\n                .selectAll('rect')\n                .data(activitiesData)\n                .enter()\n                .append('rect')\n                .attr('width', x.bandwidth())\n                .attr('height', function (d) {\n                    return 140 - y(d.calories)\n                })\n                .attr('fill', '#E60000')\n                .attr('x1', function (d) {\n                    return x(d.day)\n                })\n                .attr('y1', function (d) {\n                    return y(d.calories)\n                })\n                .attr('y2', '140')\n\n            let tickLabels = ['1', '2', '3', '4', '5', '6', '7']\n            let yTickLabels = [\n                minKilo - 1,\n                (minKilo + maxKilo) / 2,\n                maxKilo + 1,\n            ]\n            const axeX = d3\n                .axisBottom(x)\n                .tickSize(0)\n                .tickFormat((d, i) => tickLabels[i])\n            const axeY = d3.axisRight(yKilo).tickSize(0).ticks(3)\n\n            groupeX.call(axeX).style('font-size', '14px')\n            groupeXtop.call(axeX)\n            groupeXmiddle.call(axeX)\n\n            groupeX\n                .select('.domain')\n                .attr('stroke', '#DEDEDE')\n                .attr('stroke-width', 1)\n\n            groupeXtop\n                .select('.domain')\n                .attr('stroke', '#DEDEDE')\n                .attr('stroke-width', 1)\n                .attr('stroke-dasharray', '2')\n\n            groupeXmiddle\n                .select('.domain')\n                .attr('stroke', '#DEDEDE')\n                .attr('stroke-width', 1)\n                .attr('stroke-dasharray', '2')\n\n            groupeX\n                .selectAll('.tick text')\n                .attr('transform', 'translate(0, 10)')\n                .attr('class', 'text-gray-500')\n\n            groupeXmiddle.selectAll('.tick text').attr('class', 'text-gray-50')\n            groupeXtop.selectAll('.tick text').attr('class', 'text-gray-50')\n\n            groupeY.call(axeY).style('font-size', '14px')\n\n            groupeY.select('.domain').attr('stroke-width', 0)\n            groupeY\n                .selectAll('.tick text')\n                .attr('transform', 'translate(20, 0)')\n                .attr('class', 'text-gray-500')\n\n            // LÃ©gends\n\n            const GroupLegends = graph\n                .append('g')\n                .attr('transform', 'translate(500, 0)')\n        }\n\n        setSvgWeight(SvgWeightCreation)\n    }, [SvgWeight, activitiesData])\n\n    return (\n        <div className=\"rounded-md col-span-3 weight-box\">\n            {console.log(activitiesData)}\n        </div>\n    )\n}\n\nexport default Weight\n"]},"metadata":{},"sourceType":"module"}