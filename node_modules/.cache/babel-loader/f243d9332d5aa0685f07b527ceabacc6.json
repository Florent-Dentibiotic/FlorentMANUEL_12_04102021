{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/services/UserService.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport UserMapper from '../mapper/UserMapper';\nimport UserKeyDataMapper from '../mapper/UserKeyDataMapper';\n/* MOCKS */\n\nimport userJson12 from '../mocks/user12/user12.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useFetch(userId) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [keyData, setKeyData] = useState({}); // useEffect(() => {\n  //     fetch(`http://localhost:3000/user/${userId}`)\n  //         .then((res) => res.json())\n  //         .then(\n  //             ({ data }) => {\n  //                 setUserData(UserMapper.convertToUser(data))\n  //                 setKeyData(UserKeyDataMapper.convertToKeyData(data))\n  //                 setIsLoaded(true)\n  //             },\n  //             (error) => {\n  //                 setError(error)\n  //             }\n  //         )\n  // }, [userId])\n\n  useEffect(() => {\n    fetch(`user${userId}.json`).then(res => res.json()).then(({\n      data\n    }) => {\n      console.log(data);\n      setUserData(UserMapper.convertToUser(data));\n      setKeyData(UserKeyDataMapper.convertToKeyData(data));\n      setIsLoaded(true);\n    }, error => {\n      setError(error);\n    });\n  });\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Erreur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  } else {\n    return {\n      userData,\n      keyData,\n      isLoaded,\n      error\n    };\n  }\n}\n\n_s(useFetch, \"O4UAHXRXT4nvtFsZg8vZTgymPk4=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/services/UserService.jsx"],"names":["React","useState","useEffect","UserMapper","UserKeyDataMapper","userJson12","useFetch","userId","error","setError","isLoaded","setIsLoaded","userData","setUserData","keyData","setKeyData","fetch","then","res","json","data","console","log","convertToUser","convertToKeyData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AAEA;;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC,CAJsB,CAMtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,KAAK,CAAE,OAAMT,MAAO,OAAf,CAAL,CACKU,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAGQ,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAP,MAAAA,WAAW,CAACV,UAAU,CAACoB,aAAX,CAAyBH,IAAzB,CAAD,CAAX;AACAL,MAAAA,UAAU,CAACX,iBAAiB,CAACoB,gBAAlB,CAAmCJ,IAAnC,CAAD,CAAV;AACAT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KART,EASSH,KAAD,IAAW;AACPC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAXT;AAaH,GAdQ,CAAT;;AAgBA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAI,CAACE,QAAL,EAAe;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,WAAO;AACHE,MAAAA,QADG;AAEHE,MAAAA,OAFG;AAGHJ,MAAAA,QAHG;AAIHF,MAAAA;AAJG,KAAP;AAMH;AACJ;;GAjDQF,Q;;AAmDT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport UserMapper from '../mapper/UserMapper'\nimport UserKeyDataMapper from '../mapper/UserKeyDataMapper'\n\n/* MOCKS */\nimport userJson12 from '../mocks/user12/user12.json'\n\nfunction useFetch(userId) {\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [userData, setUserData] = useState({})\n    const [keyData, setKeyData] = useState({})\n\n    // useEffect(() => {\n    //     fetch(`http://localhost:3000/user/${userId}`)\n    //         .then((res) => res.json())\n    //         .then(\n    //             ({ data }) => {\n    //                 setUserData(UserMapper.convertToUser(data))\n    //                 setKeyData(UserKeyDataMapper.convertToKeyData(data))\n    //                 setIsLoaded(true)\n    //             },\n    //             (error) => {\n    //                 setError(error)\n    //             }\n    //         )\n    // }, [userId])\n\n    useEffect(() => {\n        fetch(`user${userId}.json`)\n            .then((res) => res.json())\n            .then(\n                ({ data }) => {\n                    console.log(data)\n                    setUserData(UserMapper.convertToUser(data))\n                    setKeyData(UserKeyDataMapper.convertToKeyData(data))\n                    setIsLoaded(true)\n                },\n                (error) => {\n                    setError(error)\n                }\n            )\n    })\n\n    if (error) {\n        return <div>Erreur</div>\n    } else if (!isLoaded) {\n        return <div>Chargement...</div>\n    } else {\n        return {\n            userData,\n            keyData,\n            isLoaded,\n            error,\n        }\n    }\n}\n\nexport default useFetch\n"]},"metadata":{},"sourceType":"module"}