{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/services/PerformanceService.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport UserPerformanceMapper from '../mapper/UserPerformanceMapper';\n/**\n * Custom Hook to Fetch Performance Data\n * @param { number } id\n * @return { Performances }\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useFetchPerf(id) {\n  _s();\n\n  const [errorPerf, setError] = useState(null);\n  const [performanceLoaded, setIsLoaded] = useState(false);\n  const [performanceData, setPerformanceData] = useState({});\n  useEffect(() => {\n    fetch(`http://localhost:3000/user/${id}/performance`).then(res => res.json()).then(({\n      data\n    }) => {\n      setPerformanceData(UserPerformanceMapper.convertToUserPerf(data));\n      setIsLoaded(true);\n    }, error => {\n      setError(error);\n    });\n  }, [id]);\n  useEffect(() => {\n    async function fetchUser() {\n      try {\n        const response = await fetch(`http://localhost:3000/user/${id}/performance`); //** MOCK LINK **\n        //const response = await fetch(`../user/${id}/performance.json`)\n\n        const {\n          data\n        } = await response.json();\n        setPerformanceData(UserPerformanceMapper.convertToUserPerf(data));\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      } finally {\n        setIsLoaded(true);\n      }\n    }\n\n    fetchUser();\n  }, [id]);\n\n  if (errorPerf) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Erreur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  } else if (!performanceLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  } else {\n    return {\n      performanceData,\n      performanceLoaded,\n      errorPerf\n    };\n  }\n}\n\n_s(useFetchPerf, \"PPk7viW4Q9gFlgrYjdJu3QVPHXU=\");\n\nexport default useFetchPerf;","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/services/PerformanceService.jsx"],"names":["React","useState","useEffect","UserPerformanceMapper","useFetchPerf","id","errorPerf","setError","performanceLoaded","setIsLoaded","performanceData","setPerformanceData","fetch","then","res","json","data","convertToUserPerf","error","fetchUser","response","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AAEA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,iBAAD,EAAoBC,WAApB,IAAmCR,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAE,8BAA6BP,EAAG,cAAlC,CAAL,CACKQ,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAGQ,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAc;AACVL,MAAAA,kBAAkB,CACdR,qBAAqB,CAACc,iBAAtB,CAAwCD,IAAxC,CADc,CAAlB;AAGAP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KART,EASSS,KAAD,IAAW;AACPX,MAAAA,QAAQ,CAACW,KAAD,CAAR;AACH,KAXT;AAaH,GAdQ,EAcN,CAACb,EAAD,CAdM,CAAT;AAgBAH,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeiB,SAAf,GAA2B;AACvB,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMR,KAAK,CACvB,8BAA6BP,EAAG,cADT,CAA5B,CADA,CAIA;AACA;;AACA,cAAM;AAAEW,UAAAA;AAAF,YAAW,MAAMI,QAAQ,CAACL,IAAT,EAAvB;AACAJ,QAAAA,kBAAkB,CACdR,qBAAqB,CAACc,iBAAtB,CAAwCD,IAAxC,CADc,CAAlB;AAGH,OAVD,CAUE,OAAOK,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAd,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAbD,SAaU;AACNE,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ;;AACDU,IAAAA,SAAS;AACZ,GApBQ,EAoBN,CAACd,EAAD,CApBM,CAAT;;AAsBA,MAAIC,SAAJ,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAI,CAACE,iBAAL,EAAwB;AAC3B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,WAAO;AACHE,MAAAA,eADG;AAEHF,MAAAA,iBAFG;AAGHF,MAAAA;AAHG,KAAP;AAKH;AACJ;;GAtDQF,Y;;AAwDT,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport UserPerformanceMapper from '../mapper/UserPerformanceMapper'\n\n/**\n * Custom Hook to Fetch Performance Data\n * @param { number } id\n * @return { Performances }\n */\n\nfunction useFetchPerf(id) {\n    const [errorPerf, setError] = useState(null)\n    const [performanceLoaded, setIsLoaded] = useState(false)\n    const [performanceData, setPerformanceData] = useState({})\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/user/${id}/performance`)\n            .then((res) => res.json())\n            .then(\n                ({ data }) => {\n                    setPerformanceData(\n                        UserPerformanceMapper.convertToUserPerf(data)\n                    )\n                    setIsLoaded(true)\n                },\n                (error) => {\n                    setError(error)\n                }\n            )\n    }, [id])\n\n    useEffect(() => {\n        async function fetchUser() {\n            try {\n                const response = await fetch(\n                    `http://localhost:3000/user/${id}/performance`\n                )\n                //** MOCK LINK **\n                //const response = await fetch(`../user/${id}/performance.json`)\n                const { data } = await response.json()\n                setPerformanceData(\n                    UserPerformanceMapper.convertToUserPerf(data)\n                )\n            } catch (err) {\n                console.log(err)\n                setError(true)\n            } finally {\n                setIsLoaded(true)\n            }\n        }\n        fetchUser()\n    }, [id])\n\n    if (errorPerf) {\n        return <div>Erreur</div>\n    } else if (!performanceLoaded) {\n        return <div>Chargement...</div>\n    } else {\n        return {\n            performanceData,\n            performanceLoaded,\n            errorPerf,\n        }\n    }\n}\n\nexport default useFetchPerf\n"]},"metadata":{},"sourceType":"module"}