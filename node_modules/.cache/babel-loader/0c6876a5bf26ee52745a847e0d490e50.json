{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport { useEffect } from 'react/cjs/react.development';\nimport PropTypes from 'prop-types';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RadarChartD3({\n  perfs\n}) {\n  _s();\n\n  useEffect(() => {\n    /** CONSTANTS AND LIMITS INITIALISATION */\n    const cardio = perfs.cardio;\n    const energy = perfs.energy;\n    const endurance = perfs.endurance;\n    const strength = perfs.strength;\n    const speed = perfs.speed;\n    const intensity = perfs.intensity;\n    const maxValue = [cardio, energy, endurance, strength, speed, intensity].sort(function (a, b) {\n      return b - a;\n    });\n    /** SCALLING */\n\n    function resizeValue(size) {\n      return 85 * size / (maxValue[0] + 10);\n    }\n    /** USER SKILLS COORDINATES */\n\n\n    const cardioCoord = {\n      axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(cardio),\n      axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(cardio)\n    };\n    const energyCoord = {\n      axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(energy),\n      axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(energy)\n    };\n    const enduranceCoord = {\n      axeX: 125,\n      axeY: 130 + resizeValue(endurance)\n    };\n    const strengthCoord = {\n      axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(strength),\n      axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(strength)\n    };\n    const speedCoord = {\n      axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(speed),\n      axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(speed)\n    };\n    const intensityCoord = {\n      axeX: 125,\n      axeY: 130 - resizeValue(intensity)\n    };\n    /** HEXAGON FUNCTION CREATION */\n\n    function newHexagon(size) {\n      return `M125 ${130 - size}, ${125 + Math.sin(Math.PI / 3) * size} ${130 - Math.cos(Math.PI / 3) * size}, ${125 + Math.sin(Math.PI / 3) * size} ${130 + Math.cos(Math.PI / 3) * size}, 125 ${130 + size}, ${125 - Math.sin(Math.PI / 3) * size} ${130 + Math.cos(Math.PI / 3) * size}, ${125 - Math.sin(Math.PI / 3) * size} ${130 - Math.cos(Math.PI / 3) * size}, 125 ${130 - size}Z`;\n    }\n\n    const dPath = `M${intensityCoord.axeX} ${intensityCoord.axeY}, ${speedCoord.axeX} ${speedCoord.axeY}, ${strengthCoord.axeX} ${strengthCoord.axeY}, ${enduranceCoord.axeX} ${enduranceCoord.axeY},${energyCoord.axeX} ${energyCoord.axeY}, ${cardioCoord.axeX} ${cardioCoord.axeY}Z`;\n    const svg = d3.select('.radar-box');\n    svg.append('g').append('path').attr('fill', '#FF0101').attr('d', 'M125125Z').transition().duration(600).attr('d', dPath).attr('class', 'opacity-70');\n  }, [perfs.cardio, perfs.endurance, perfs.energy, perfs.intensity, perfs.speed, perfs.strength]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \" \"\n  }, void 0, false);\n}\n\n_s(RadarChartD3, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = RadarChartD3;\nexport default RadarChartD3;\nRadarChartD3.propTypes = {\n  perfs: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RadarChartD3\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/D3/RadarChartD3.jsx"],"names":["d3","useEffect","PropTypes","RadarChartD3","perfs","cardio","energy","endurance","strength","speed","intensity","maxValue","sort","a","b","resizeValue","size","cardioCoord","axeX","Math","sin","PI","axeY","cos","energyCoord","enduranceCoord","strengthCoord","speedCoord","intensityCoord","newHexagon","dPath","svg","select","append","attr","transition","duration","propTypes","object"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\nimport { useEffect } from 'react/cjs/react.development'\nimport PropTypes from 'prop-types'\n\nfunction RadarChartD3({ perfs }) {\n    useEffect(() => {\n        /** CONSTANTS AND LIMITS INITIALISATION */\n\n        const cardio = perfs.cardio\n        const energy = perfs.energy\n        const endurance = perfs.endurance\n        const strength = perfs.strength\n        const speed = perfs.speed\n        const intensity = perfs.intensity\n\n        const maxValue = [\n            cardio,\n            energy,\n            endurance,\n            strength,\n            speed,\n            intensity,\n        ].sort(function (a, b) {\n            return b - a\n        })\n\n        /** SCALLING */\n\n        function resizeValue(size) {\n            return (85 * size) / (maxValue[0] + 10)\n        }\n\n        /** USER SKILLS COORDINATES */\n\n        const cardioCoord = {\n            axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(cardio),\n            axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(cardio),\n        }\n\n        const energyCoord = {\n            axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(energy),\n            axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(energy),\n        }\n        const enduranceCoord = {\n            axeX: 125,\n            axeY: 130 + resizeValue(endurance),\n        }\n        const strengthCoord = {\n            axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(strength),\n            axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(strength),\n        }\n        const speedCoord = {\n            axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(speed),\n            axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(speed),\n        }\n        const intensityCoord = {\n            axeX: 125,\n            axeY: 130 - resizeValue(intensity),\n        }\n\n        /** HEXAGON FUNCTION CREATION */\n\n        function newHexagon(size) {\n            return `M125 ${130 - size}, ${125 + Math.sin(Math.PI / 3) * size} ${\n                130 - Math.cos(Math.PI / 3) * size\n            }, ${125 + Math.sin(Math.PI / 3) * size} ${\n                130 + Math.cos(Math.PI / 3) * size\n            }, 125 ${130 + size}, ${125 - Math.sin(Math.PI / 3) * size} ${\n                130 + Math.cos(Math.PI / 3) * size\n            }, ${125 - Math.sin(Math.PI / 3) * size} ${\n                130 - Math.cos(Math.PI / 3) * size\n            }, 125 ${130 - size}Z`\n        }\n\n        const dPath = `M${intensityCoord.axeX} ${intensityCoord.axeY}, ${speedCoord.axeX} ${speedCoord.axeY}, ${strengthCoord.axeX} ${strengthCoord.axeY}, ${enduranceCoord.axeX} ${enduranceCoord.axeY},${energyCoord.axeX} ${energyCoord.axeY}, ${cardioCoord.axeX} ${cardioCoord.axeY}Z`\n\n        const svg = d3.select('.radar-box')\n\n        svg.append('g')\n            .append('path')\n            .attr('fill', '#FF0101')\n            .attr('d', 'M125125Z')\n            .transition()\n            .duration(600)\n            .attr('d', dPath)\n            .attr('class', 'opacity-70')\n    }, [\n        perfs.cardio,\n        perfs.endurance,\n        perfs.energy,\n        perfs.intensity,\n        perfs.speed,\n        perfs.strength,\n    ])\n\n    return <> </>\n}\n\nexport default RadarChartD3\n\nRadarChartD3.propTypes = {\n    perfs: PropTypes.object,\n}\n"]},"metadata":{},"sourceType":"module"}