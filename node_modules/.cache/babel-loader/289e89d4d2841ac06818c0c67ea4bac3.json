{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Radar.jsx\",\n    _s = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Radar(radarData) {\n  _s();\n\n  const [SvgWeight, setSvgWeight] = useState();\n  console.log(radarData.performanceData);\n  useEffect(() => {\n    const cardio = radarData.cardio;\n    const energy = radarData.energy;\n    const endurance = radarData.endurance;\n    const strength = radarData.strength;\n    const speed = radarData.speed;\n    const intensity = radarData.intensity;\n    const maxValue = [cardio, energy, endurance, strength, speed, intensity].sort(function (a, b) {\n      return b - a;\n    });\n\n    function resizeValue(size) {\n      return 85 * size / (maxValue[0] + 10);\n    }\n\n    const cardioCoord = {\n      axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(cardio),\n      axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(cardio)\n    };\n    const energyCoord = {\n      axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(energy),\n      axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(energy)\n    };\n    const enduranceCoord = {\n      axeX: 125,\n      axeY: 130 + resizeValue(endurance)\n    };\n    const strengthCoord = {\n      axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(strength),\n      axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(strength)\n    };\n    const speedCoord = {\n      axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(speed),\n      axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(speed)\n    };\n    const intensityCoord = {\n      axeX: 125,\n      axeY: 130 - resizeValue(intensity)\n    };\n\n    function newHexagon(size) {\n      return `M125 ${130 - size}, ${125 + Math.sin(Math.PI / 3) * size} ${130 - Math.cos(Math.PI / 3) * size}, ${125 + Math.sin(Math.PI / 3) * size} ${130 + Math.cos(Math.PI / 3) * size}, 125 ${130 + size}, ${125 - Math.sin(Math.PI / 3) * size} ${130 + Math.cos(Math.PI / 3) * size}, ${125 - Math.sin(Math.PI / 3) * size} ${130 - Math.cos(Math.PI / 3) * size}, 125 ${130 - size}`;\n    }\n\n    const dPath = `M${intensityCoord.axeX} ${intensityCoord.axeY}, ${speedCoord.axeX} ${speedCoord.axeY}, ${strengthCoord.axeX} ${strengthCoord.axeY}, ${enduranceCoord.axeX} ${enduranceCoord.axeY},${energyCoord.axeX} ${energyCoord.axeY}, ${cardioCoord.axeX} ${cardioCoord.axeY}Z`;\n    const SvgWeightCreation = d3.select('.radar-box').attr('width', 250).attr('height', 250).style('background', '#000').style('border-radius', '5px');\n    SvgWeightCreation.append('g').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('d', newHexagon(85));\n    SvgWeightCreation.append('g').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('d', newHexagon(65));\n    SvgWeightCreation.append('g').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('d', newHexagon(45));\n    SvgWeightCreation.append('g').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('d', newHexagon(25));\n    SvgWeightCreation.append('g').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('d', newHexagon(12));\n    SvgWeightCreation.append('g') //.attr('transform', 'translate(0, 100)')\n    .append('path').attr('fill', '#FF0101').attr('d', newHexagon(0)).transition().duration(600).attr('d', dPath).attr('class', 'opacity-70');\n    setSvgWeight(SvgWeightCreation);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rounded-md flex items-center justify-center bg-black\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"radar-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"100\",\n        y: \"30\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Intensit\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"210\",\n        y: \"90\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Vitesse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"210\",\n        y: \"170\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Force\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"100\",\n        y: \"230\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Endurance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"5\",\n        y: \"170\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Energie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"5\",\n        y: \"90\",\n        fill: \"#fff\",\n        fontSize: \"12\",\n        children: \"Cardio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Radar, \"p63c14cVOyikPAPvnhVf/vddx7Y=\");\n\n_c = Radar;\nexport default Radar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Radar\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Radar.jsx"],"names":["d3","useEffect","useState","Radar","radarData","SvgWeight","setSvgWeight","console","log","performanceData","cardio","energy","endurance","strength","speed","intensity","maxValue","sort","a","b","resizeValue","size","cardioCoord","axeX","Math","sin","PI","axeY","cos","energyCoord","enduranceCoord","strengthCoord","speedCoord","intensityCoord","newHexagon","dPath","SvgWeightCreation","select","attr","style","append","transition","duration"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\nimport { useEffect, useState } from 'react'\n\nfunction Radar(radarData) {\n    const [SvgWeight, setSvgWeight] = useState()\n\n    console.log(radarData.performanceData)\n\n    useEffect(() => {\n        const cardio = radarData.cardio\n        const energy = radarData.energy\n        const endurance = radarData.endurance\n        const strength = radarData.strength\n        const speed = radarData.speed\n        const intensity = radarData.intensity\n\n        const maxValue = [\n            cardio,\n            energy,\n            endurance,\n            strength,\n            speed,\n            intensity,\n        ].sort(function (a, b) {\n            return b - a\n        })\n\n        function resizeValue(size) {\n            return (85 * size) / (maxValue[0] + 10)\n        }\n\n        const cardioCoord = {\n            axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(cardio),\n            axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(cardio),\n        }\n\n        const energyCoord = {\n            axeX: 125 - Math.sin(Math.PI / 3) * resizeValue(energy),\n            axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(energy),\n        }\n        const enduranceCoord = {\n            axeX: 125,\n            axeY: 130 + resizeValue(endurance),\n        }\n        const strengthCoord = {\n            axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(strength),\n            axeY: 130 + Math.cos(Math.PI / 3) * resizeValue(strength),\n        }\n        const speedCoord = {\n            axeX: 125 + Math.sin(Math.PI / 3) * resizeValue(speed),\n            axeY: 130 - Math.cos(Math.PI / 3) * resizeValue(speed),\n        }\n        const intensityCoord = {\n            axeX: 125,\n            axeY: 130 - resizeValue(intensity),\n        }\n\n        function newHexagon(size) {\n            return `M125 ${130 - size}, ${125 + Math.sin(Math.PI / 3) * size} ${\n                130 - Math.cos(Math.PI / 3) * size\n            }, ${125 + Math.sin(Math.PI / 3) * size} ${\n                130 + Math.cos(Math.PI / 3) * size\n            }, 125 ${130 + size}, ${125 - Math.sin(Math.PI / 3) * size} ${\n                130 + Math.cos(Math.PI / 3) * size\n            }, ${125 - Math.sin(Math.PI / 3) * size} ${\n                130 - Math.cos(Math.PI / 3) * size\n            }, 125 ${130 - size}`\n        }\n\n        const dPath = `M${intensityCoord.axeX} ${intensityCoord.axeY}, ${speedCoord.axeX} ${speedCoord.axeY}, ${strengthCoord.axeX} ${strengthCoord.axeY}, ${enduranceCoord.axeX} ${enduranceCoord.axeY},${energyCoord.axeX} ${energyCoord.axeY}, ${cardioCoord.axeX} ${cardioCoord.axeY}Z`\n\n        const SvgWeightCreation = d3\n            .select('.radar-box')\n            .attr('width', 250)\n            .attr('height', 250)\n            .style('background', '#000')\n            .style('border-radius', '5px')\n\n        SvgWeightCreation.append('g')\n            .append('path')\n            .attr('fill', 'none')\n            .attr('stroke', '#fff')\n            .attr('d', newHexagon(85))\n\n        SvgWeightCreation.append('g')\n            .append('path')\n            .attr('fill', 'none')\n            .attr('stroke', '#fff')\n            .attr('d', newHexagon(65))\n\n        SvgWeightCreation.append('g')\n            .append('path')\n            .attr('fill', 'none')\n            .attr('stroke', '#fff')\n            .attr('d', newHexagon(45))\n\n        SvgWeightCreation.append('g')\n            .append('path')\n            .attr('fill', 'none')\n            .attr('stroke', '#fff')\n            .attr('d', newHexagon(25))\n\n        SvgWeightCreation.append('g')\n            .append('path')\n            .attr('fill', 'none')\n            .attr('stroke', '#fff')\n            .attr('d', newHexagon(12))\n\n        SvgWeightCreation.append('g')\n            //.attr('transform', 'translate(0, 100)')\n            .append('path')\n            .attr('fill', '#FF0101')\n            .attr('d', newHexagon(0))\n            .transition()\n            .duration(600)\n            .attr('d', dPath)\n            .attr('class', 'opacity-70')\n\n        setSvgWeight(SvgWeightCreation)\n    }, [])\n    return (\n        <div className=\"rounded-md flex items-center justify-center bg-black\">\n            <svg className=\"radar-box\">\n                <text x=\"100\" y=\"30\" fill=\"#fff\" fontSize=\"12\">\n                    Intensité\n                </text>\n                <text x=\"210\" y=\"90\" fill=\"#fff\" fontSize=\"12\">\n                    Vitesse\n                </text>\n                <text x=\"210\" y=\"170\" fill=\"#fff\" fontSize=\"12\">\n                    Force\n                </text>\n                <text x=\"100\" y=\"230\" fill=\"#fff\" fontSize=\"12\">\n                    Endurance\n                </text>\n                <text x=\"5\" y=\"170\" fill=\"#fff\" fontSize=\"12\">\n                    Energie\n                </text>\n                <text x=\"5\" y=\"90\" fill=\"#fff\" fontSize=\"12\">\n                    Cardio\n                </text>\n            </svg>\n        </div>\n    )\n}\n\nexport default Radar\n"]},"metadata":{},"sourceType":"module"}