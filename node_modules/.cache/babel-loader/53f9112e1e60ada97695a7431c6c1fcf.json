{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/services/UserService.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport UserMapper from '../mapper/UserMapper';\nimport UserKeyDataMapper from '../mapper/UserKeyDataMapper';\n/**\n * Custom Hook to Fetch User & Key Data\n * @param { number } id\n * @return { UserData, KeyData }\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useFetch(id) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [keyData, setKeyData] = useState({});\n  useEffect(() => {\n    async function fetchUser() {\n      try {\n        // const response = await fetch(`http://localhost:3000/user/${id}`)\n        // //** MOCK LINK **\n        const response = await fetch(`../user/${id}/user.json`);\n        console.log(response);\n        const {\n          data\n        } = await response.json();\n        setUserData(UserMapper.convertToUser(data));\n        setKeyData(UserKeyDataMapper.convertToKeyData(data));\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      } finally {\n        setIsLoaded(true);\n      }\n    }\n\n    fetchUser();\n  }, [id]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Erreur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  } else {\n    return {\n      userData,\n      keyData,\n      isLoaded,\n      error\n    };\n  }\n}\n\n_s(useFetch, \"O4UAHXRXT4nvtFsZg8vZTgymPk4=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/services/UserService.jsx"],"names":["React","useState","useEffect","UserMapper","UserKeyDataMapper","useFetch","id","error","setError","isLoaded","setIsLoaded","userData","setUserData","keyData","setKeyData","fetchUser","response","fetch","console","log","data","json","convertToUser","convertToKeyData","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AAEA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,QAAT,CAAkBC,EAAlB,EAAsB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAea,SAAf,GAA2B;AACvB,UAAI;AACA;AACA;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,WAAUX,EAAG,YAAf,CAA5B;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,cAAM;AAAEI,UAAAA;AAAF,YAAW,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;AACAT,QAAAA,WAAW,CAACT,UAAU,CAACmB,aAAX,CAAyBF,IAAzB,CAAD,CAAX;AACAN,QAAAA,UAAU,CAACV,iBAAiB,CAACmB,gBAAlB,CAAmCH,IAAnC,CAAD,CAAV;AACH,OARD,CAQE,OAAOI,GAAP,EAAY;AACVN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAhB,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAXD,SAWU;AACNE,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ;;AACDK,IAAAA,SAAS;AACZ,GAlBQ,EAkBN,CAACT,EAAD,CAlBM,CAAT;;AAoBA,MAAIC,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAI,CAACE,QAAL,EAAe;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,WAAO;AACHE,MAAAA,QADG;AAEHE,MAAAA,OAFG;AAGHJ,MAAAA,QAHG;AAIHF,MAAAA;AAJG,KAAP;AAMH;AACJ;;GAtCQF,Q;;AAwCT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport UserMapper from '../mapper/UserMapper'\nimport UserKeyDataMapper from '../mapper/UserKeyDataMapper'\n\n/**\n * Custom Hook to Fetch User & Key Data\n * @param { number } id\n * @return { UserData, KeyData }\n */\n\nfunction useFetch(id) {\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [userData, setUserData] = useState({})\n    const [keyData, setKeyData] = useState({})\n\n    useEffect(() => {\n        async function fetchUser() {\n            try {\n                // const response = await fetch(`http://localhost:3000/user/${id}`)\n                // //** MOCK LINK **\n                const response = await fetch(`../user/${id}/user.json`)\n                console.log(response)\n                const { data } = await response.json()\n                setUserData(UserMapper.convertToUser(data))\n                setKeyData(UserKeyDataMapper.convertToKeyData(data))\n            } catch (err) {\n                console.log(err)\n                setError(true)\n            } finally {\n                setIsLoaded(true)\n            }\n        }\n        fetchUser()\n    }, [id])\n\n    if (error) {\n        return <div>Erreur</div>\n    } else if (!isLoaded) {\n        return <div>Chargement...</div>\n    } else {\n        return {\n            userData,\n            keyData,\n            isLoaded,\n            error,\n        }\n    }\n}\n\nexport default useFetch\n"]},"metadata":{},"sourceType":"module"}