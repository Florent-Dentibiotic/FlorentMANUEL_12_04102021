{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport UserSessionsMapper from '../mapper/UserSessionsMapper';\n/**\n * Custom Hook to Fetch Sessions Duration Data\n *\n * @param { number } id\n * @return { SessionsDuration, sessionsLoaded, errorSessions }\n */\n\nexport default function useFetchSessions(id) {\n  _s();\n\n  const [errorSessions, setError] = useState(null);\n  const [sessionsLoaded, setIsLoaded] = useState(false);\n  const [sessionsData, setsessionsData] = useState({});\n  useEffect(() => {\n    async function fetchUser() {\n      try {\n        // const response = await fetch(\n        //     `http://localhost:3000/user/${id}/average-sessions`\n        // )\n        //** MOCK LINK **\n        const response = await fetch(`../${id}/average-sessions.json`);\n        const {\n          data\n        } = await response.json();\n        setsessionsData(UserSessionsMapper.convertToSession(data));\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      } finally {\n        setIsLoaded(true);\n      }\n    }\n\n    fetchUser();\n  }, [id]);\n  return {\n    sessionsData,\n    sessionsLoaded,\n    errorSessions\n  };\n}\n\n_s(useFetchSessions, \"q+aZqFUdciUaagdzyMHjDBPqmDA=\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/OpenClassRoom Projects/FlorentMANUEL_12_04102021/src/services/SessionsService.jsx"],"names":["useState","useEffect","UserSessionsMapper","useFetchSessions","id","errorSessions","setError","sessionsLoaded","setIsLoaded","sessionsData","setsessionsData","fetchUser","response","fetch","data","json","convertToSession","err","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,EAA1B,EAA8B;AAAA;;AACzC,QAAM,CAACC,aAAD,EAAgBC,QAAhB,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,cAAD,EAAiBC,WAAjB,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,SAAf,GAA2B;AACvB,UAAI;AACA;AACA;AACA;AACA;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,MAAKT,EAAG,wBAAV,CAA5B;AACA,cAAM;AAAEU,UAAAA;AAAF,YAAW,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAL,QAAAA,eAAe,CAACR,kBAAkB,CAACc,gBAAnB,CAAoCF,IAApC,CAAD,CAAf;AACH,OARD,CAQE,OAAOG,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAX,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAXD,SAWU;AACNE,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ;;AACDG,IAAAA,SAAS;AACZ,GAlBQ,EAkBN,CAACP,EAAD,CAlBM,CAAT;AAoBA,SAAO;AACHK,IAAAA,YADG;AAEHF,IAAAA,cAFG;AAGHF,IAAAA;AAHG,GAAP;AAKH;;GA9BuBF,gB","sourcesContent":["import { useState, useEffect } from 'react';\nimport UserSessionsMapper from '../mapper/UserSessionsMapper';\n\n/**\n * Custom Hook to Fetch Sessions Duration Data\n *\n * @param { number } id\n * @return { SessionsDuration, sessionsLoaded, errorSessions }\n */\n\nexport default function useFetchSessions(id) {\n    const [errorSessions, setError] = useState(null);\n    const [sessionsLoaded, setIsLoaded] = useState(false);\n    const [sessionsData, setsessionsData] = useState({});\n\n    useEffect(() => {\n        async function fetchUser() {\n            try {\n                // const response = await fetch(\n                //     `http://localhost:3000/user/${id}/average-sessions`\n                // )\n                //** MOCK LINK **\n                const response = await fetch(`../${id}/average-sessions.json`);\n                const { data } = await response.json();\n                setsessionsData(UserSessionsMapper.convertToSession(data));\n            } catch (err) {\n                console.log(err);\n                setError(true);\n            } finally {\n                setIsLoaded(true);\n            }\n        }\n        fetchUser();\n    }, [id]);\n\n    return {\n        sessionsData,\n        sessionsLoaded,\n        errorSessions,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}