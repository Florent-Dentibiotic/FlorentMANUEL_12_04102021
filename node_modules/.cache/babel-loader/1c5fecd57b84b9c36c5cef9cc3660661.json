{"ast":null,"code":"import _regeneratorRuntime from\"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import UserSessionsMapper from'../mapper/UserSessionsMapper';/**\n * Custom Hook to Fetch Sessions Duration Data\n *\n * @param { number } id\n * @return { SessionsDuration, sessionsLoaded, errorSessions }\n */function useFetchSessions(id){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),errorSessions=_useState2[0],setError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),sessionsLoaded=_useState4[0],setIsLoaded=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),sessionsData=_useState6[0],setsessionsData=_useState6[1];useEffect(function(){function fetchUser(){return _fetchUser.apply(this,arguments);}function _fetchUser(){_fetchUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,_yield$response$json,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"../\".concat(id,\"/average-sessions.json\"));case 3:response=_context.sent;_context.next=6;return response.json();case 6:_yield$response$json=_context.sent;data=_yield$response$json.data;setsessionsData(UserSessionsMapper.convertToSession(data));_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(_context.t0);setError(true);case 15:_context.prev=15;setIsLoaded(true);return _context.finish(15);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,11,15,18]]);}));return _fetchUser.apply(this,arguments);}fetchUser();},[id]);return{sessionsData:sessionsData,sessionsLoaded:sessionsLoaded,errorSessions:errorSessions};}export default useFetchSessions;","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/services/SessionsService.jsx"],"names":["useState","useEffect","UserSessionsMapper","useFetchSessions","id","errorSessions","setError","sessionsLoaded","setIsLoaded","sessionsData","setsessionsData","fetchUser","fetch","response","json","data","convertToSession","console","log"],"mappings":"mhBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,8BAA/B,CAEA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASC,CAAAA,gBAAT,CAA0BC,EAA1B,CAA8B,eACQJ,QAAQ,CAAC,IAAD,CADhB,wCACnBK,aADmB,eACJC,QADI,8BAEYN,QAAQ,CAAC,KAAD,CAFpB,yCAEnBO,cAFmB,eAEHC,WAFG,8BAGcR,QAAQ,CAAC,EAAD,CAHtB,yCAGnBS,YAHmB,eAGLC,eAHK,eAK1BT,SAAS,CAAC,UAAM,SACGU,CAAAA,SADH,qIACZ,gNAM+BC,CAAAA,KAAK,cAAOR,EAAP,2BANpC,QAMcS,QANd,qCAO+BA,CAAAA,QAAQ,CAACC,IAAT,EAP/B,2CAOgBC,IAPhB,sBAOgBA,IAPhB,CAQQL,eAAe,CAACR,kBAAkB,CAACc,gBAAnB,CAAoCD,IAApC,CAAD,CAAf,CARR,iFAUQE,OAAO,CAACC,GAAR,cACAZ,QAAQ,CAAC,IAAD,CAAR,CAXR,yBAaQE,WAAW,CAAC,IAAD,CAAX,CAbR,sGADY,4CAiBZG,SAAS,GACZ,CAlBQ,CAkBN,CAACP,EAAD,CAlBM,CAAT,CAoBA,MAAO,CACHK,YAAY,CAAZA,YADG,CAEHF,cAAc,CAAdA,cAFG,CAGHF,aAAa,CAAbA,aAHG,CAAP,CAKH,CAED,cAAeF,CAAAA,gBAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport UserSessionsMapper from '../mapper/UserSessionsMapper'\n\n/**\n * Custom Hook to Fetch Sessions Duration Data\n *\n * @param { number } id\n * @return { SessionsDuration, sessionsLoaded, errorSessions }\n */\n\nfunction useFetchSessions(id) {\n    const [errorSessions, setError] = useState(null)\n    const [sessionsLoaded, setIsLoaded] = useState(false)\n    const [sessionsData, setsessionsData] = useState({})\n\n    useEffect(() => {\n        async function fetchUser() {\n            try {\n                // const response = await fetch(\n                //     `http://localhost:3000/user/${id}/average-sessions`\n                // )\n                //** MOCK LINK **\n                const response = await fetch(`../${id}/average-sessions.json`)\n                const { data } = await response.json()\n                setsessionsData(UserSessionsMapper.convertToSession(data))\n            } catch (err) {\n                console.log(err)\n                setError(true)\n            } finally {\n                setIsLoaded(true)\n            }\n        }\n        fetchUser()\n    }, [id])\n\n    return {\n        sessionsData,\n        sessionsLoaded,\n        errorSessions,\n    }\n}\n\nexport default useFetchSessions\n"]},"metadata":{},"sourceType":"module"}