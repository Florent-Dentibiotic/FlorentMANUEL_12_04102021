{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport UserPerformanceMapper from '../mapper/UserPerformanceMapper';\n/**\n * Custom Hook to Fetch Performance Data\n *\n * @param { number } id\n * @return { Performances, performanceLoaded, errorPerf }\n */\n\nfunction useFetchPerf(id) {\n  _s();\n\n  const [errorPerf, setError] = useState(null);\n  const [performanceLoaded, setIsLoaded] = useState(false);\n  const [performanceData, setPerformanceData] = useState({});\n  useEffect(() => {\n    async function fetchUser() {\n      try {\n        const response = await fetch(`http://localhost:3000/user/${id}/performance`); //** MOCK LINK **\n        //const response = await fetch(`../${id}/performance.json`)\n\n        const {\n          data\n        } = await response.json();\n        setPerformanceData(UserPerformanceMapper.convertToUserPerf(data));\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      } finally {\n        setIsLoaded(true);\n      }\n    }\n\n    fetchUser();\n  }, [id]);\n  return {\n    performanceData,\n    performanceLoaded,\n    errorPerf\n  };\n}\n\n_s(useFetchPerf, \"l5rbNG+ywDbzYM/zjB+MPrTuLaU=\");\n\nexport default useFetchPerf;","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/services/PerformanceService.jsx"],"names":["React","useState","useEffect","UserPerformanceMapper","useFetchPerf","id","errorPerf","setError","performanceLoaded","setIsLoaded","performanceData","setPerformanceData","fetchUser","response","fetch","data","json","convertToUserPerf","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,iBAAD,EAAoBC,WAApB,IAAmCR,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,SAAf,GAA2B;AACvB,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,8BAA6BT,EAAG,cADT,CAA5B,CADA,CAIA;AACA;;AACA,cAAM;AAAEU,UAAAA;AAAF,YAAW,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAL,QAAAA,kBAAkB,CACdR,qBAAqB,CAACc,iBAAtB,CAAwCF,IAAxC,CADc,CAAlB;AAGH,OAVD,CAUE,OAAOG,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAX,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAbD,SAaU;AACNE,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ;;AACDG,IAAAA,SAAS;AACZ,GApBQ,EAoBN,CAACP,EAAD,CApBM,CAAT;AAsBA,SAAO;AACHK,IAAAA,eADG;AAEHF,IAAAA,iBAFG;AAGHF,IAAAA;AAHG,GAAP;AAKH;;GAhCQF,Y;;AAkCT,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport UserPerformanceMapper from '../mapper/UserPerformanceMapper'\n\n/**\n * Custom Hook to Fetch Performance Data\n *\n * @param { number } id\n * @return { Performances, performanceLoaded, errorPerf }\n */\n\nfunction useFetchPerf(id) {\n    const [errorPerf, setError] = useState(null)\n    const [performanceLoaded, setIsLoaded] = useState(false)\n    const [performanceData, setPerformanceData] = useState({})\n\n    useEffect(() => {\n        async function fetchUser() {\n            try {\n                const response = await fetch(\n                    `http://localhost:3000/user/${id}/performance`\n                )\n                //** MOCK LINK **\n                //const response = await fetch(`../${id}/performance.json`)\n                const { data } = await response.json()\n                setPerformanceData(\n                    UserPerformanceMapper.convertToUserPerf(data)\n                )\n            } catch (err) {\n                console.log(err)\n                setError(true)\n            } finally {\n                setIsLoaded(true)\n            }\n        }\n        fetchUser()\n    }, [id])\n\n    return {\n        performanceData,\n        performanceLoaded,\n        errorPerf,\n    }\n}\n\nexport default useFetchPerf\n"]},"metadata":{},"sourceType":"module"}