{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/services/UserService.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport UserMapper from '../mapper/UserMapper';\nimport { useState, useEffect } from 'react';\nimport UserKeyDataMapper from '../mapper/UserKeyDataMapper';\nimport UserActivitiesData from '../core/UserActivitiesData';\nimport UserActivitiesMapper from '../mapper/UserActivitiesMapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useFetch(userId) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [keyData, setKeyData] = useState({});\n  const [activitiesData, setActivitiesData] = useState({}); // Remarque : le tableau vide de dépendances [] indique\n  // que useEffect ne s’exécutera qu’une fois, un peu comme\n  // componentDidMount()\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/user/${userId}`).then(res => res.json()).then(({\n      data\n    }) => {\n      setIsLoaded(true); //console.log(data)\n\n      setUserData(UserMapper.convertToUser(data));\n      setKeyData(UserKeyDataMapper.convertToKeyData(data));\n    }, // Remarque : il faut gérer les erreurs ici plutôt que dans\n    // un bloc catch() afin que nous n’avalions pas les exceptions\n    // dues à de véritables bugs dans les composants.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n    fetch(`http://localhost:3000/user/${userId}/activity`).then(res => res.json()).then(({\n      data\n    }) => {\n      setIsLoaded(true);\n      setActivitiesData(UserActivitiesMapper.convertToActivities(data));\n    }, // Remarque : il faut gérer les erreurs ici plutôt que dans\n    // un bloc catch() afin que nous n’avalions pas les exceptions\n    // dues à de véritables bugs dans les composants.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    }); //console.log(userData)\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Erreur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  } else {\n    return {\n      userData,\n      keyData,\n      activitiesData,\n      isLoaded,\n      error\n    };\n  }\n}\n\n_s(useFetch, \"GcHaRFWL3EvQrm/CBYbg0dkZUMA=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/services/UserService.js"],"names":["React","UserMapper","useState","useEffect","UserKeyDataMapper","UserActivitiesData","UserActivitiesMapper","useFetch","userId","error","setError","isLoaded","setIsLoaded","userData","setUserData","keyData","setKeyData","activitiesData","setActivitiesData","fetch","then","res","json","data","convertToUser","convertToKeyData","convertToActivities"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,EAAD,CAApD,CALsB,CAOtB;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,KAAK,CAAE,8BAA6BX,MAAO,EAAtC,CAAL,CACKY,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAGQ,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAc;AACVX,MAAAA,WAAW,CAAC,IAAD,CAAX,CADU,CAEV;;AACAE,MAAAA,WAAW,CAACb,UAAU,CAACuB,aAAX,CAAyBD,IAAzB,CAAD,CAAX;AACAP,MAAAA,UAAU,CAACZ,iBAAiB,CAACqB,gBAAlB,CAAmCF,IAAnC,CAAD,CAAV;AACH,KART,EASQ;AACA;AACA;AACCd,IAAAA,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAfT;AAiBAU,IAAAA,KAAK,CAAE,8BAA6BX,MAAO,WAAtC,CAAL,CACKY,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAGQ,CAAC;AAAEG,MAAAA;AAAF,KAAD,KAAc;AACVX,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,MAAAA,iBAAiB,CACbZ,oBAAoB,CAACoB,mBAArB,CAAyCH,IAAzC,CADa,CAAjB;AAGH,KART,EASQ;AACA;AACA;AACCd,IAAAA,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAfT,EAlBY,CAmCZ;AACH,GApCQ,EAoCN,EApCM,CAAT;;AAsCA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAI,CAACE,QAAL,EAAe;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,WAAO;AAAEE,MAAAA,QAAF;AAAYE,MAAAA,OAAZ;AAAqBE,MAAAA,cAArB;AAAqCN,MAAAA,QAArC;AAA+CF,MAAAA;AAA/C,KAAP;AACH;AACJ;;GAvDQF,Q;;AAyDT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport UserMapper from '../mapper/UserMapper'\nimport { useState, useEffect } from 'react'\nimport UserKeyDataMapper from '../mapper/UserKeyDataMapper'\nimport UserActivitiesData from '../core/UserActivitiesData'\nimport UserActivitiesMapper from '../mapper/UserActivitiesMapper'\n\nfunction useFetch(userId) {\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [userData, setUserData] = useState({})\n    const [keyData, setKeyData] = useState({})\n    const [activitiesData, setActivitiesData] = useState({})\n\n    // Remarque : le tableau vide de dépendances [] indique\n    // que useEffect ne s’exécutera qu’une fois, un peu comme\n    // componentDidMount()\n    useEffect(() => {\n        fetch(`http://localhost:3000/user/${userId}`)\n            .then((res) => res.json())\n            .then(\n                ({ data }) => {\n                    setIsLoaded(true)\n                    //console.log(data)\n                    setUserData(UserMapper.convertToUser(data))\n                    setKeyData(UserKeyDataMapper.convertToKeyData(data))\n                },\n                // Remarque : il faut gérer les erreurs ici plutôt que dans\n                // un bloc catch() afin que nous n’avalions pas les exceptions\n                // dues à de véritables bugs dans les composants.\n                (error) => {\n                    setIsLoaded(true)\n                    setError(error)\n                }\n            )\n        fetch(`http://localhost:3000/user/${userId}/activity`)\n            .then((res) => res.json())\n            .then(\n                ({ data }) => {\n                    setIsLoaded(true)\n                    setActivitiesData(\n                        UserActivitiesMapper.convertToActivities(data)\n                    )\n                },\n                // Remarque : il faut gérer les erreurs ici plutôt que dans\n                // un bloc catch() afin que nous n’avalions pas les exceptions\n                // dues à de véritables bugs dans les composants.\n                (error) => {\n                    setIsLoaded(true)\n                    setError(error)\n                }\n            )\n        //console.log(userData)\n    }, [])\n\n    if (error) {\n        return <div>Erreur</div>\n    } else if (!isLoaded) {\n        return <div>Chargement...</div>\n    } else {\n        return { userData, keyData, activitiesData, isLoaded, error }\n    }\n}\n\nexport default useFetch\n"]},"metadata":{},"sourceType":"module"}