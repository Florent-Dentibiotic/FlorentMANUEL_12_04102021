{"ast":null,"code":"import * as d3 from 'd3';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BarChartD3(data) {\n  console.log(data); //const minKilo = d3.min(activitiesData, (d) => d.kilogram)\n  //         const maxKilo = d3.max(activitiesData, (d) => d.kilogram)\n  //         const max = d3.max(activitiesData, (d) => d.calories)\n  //         const x = d3\n  //             .scaleBand()\n  //             .domain(activitiesData.map((item) => item.day))\n  //             .range([0, 685])\n  //             .paddingInner(0.95)\n  //         const y = d3\n  //             .scaleLinear()\n  //             .domain([0, max + 50])\n  //             .range([140, 0])\n  //         const yKilo = d3\n  //             .scaleLinear()\n  //             .domain([minKilo - 1, maxKilo + 1])\n  //             .range([140, 0])\n  //         const svg = d3\n  //             .select('svg')\n  //             .attr('width', 825)\n  //             .attr('height', 320)\n  //             .attr('class', 'bg-gray-50')\n  //             .style('border-radius', '5px')\n  //         const graph = svg\n  //             .append('g')\n  //             .attr('width', 685)\n  //             .attr('height', 160)\n  //             .attr('transform', 'translate(50, 110)')\n  //         const groupeX = graph\n  //             .append('g')\n  //             .attr('transform', `translate(0, 139)`)\n  //         const groupeXmiddle = graph\n  //             .append('g')\n  //             .attr('transform', `translate(0, 70)`)\n  //         const groupeXtop = graph.append('g')\n  //         const groupeY = graph\n  //             .append('g')\n  //             .attr('transform', `translate(700, 0)`)\n  //         const groupKilo = graph\n  //             .append('g')\n  //             .attr('transform', `translate(-6, 0)`)\n  //             .attr('width', 685)\n  //             .attr('height', 140)\n  //         const groupCalories = graph\n  //             .append('g')\n  //             .attr('transform', `translate(6, 0)`)\n  //         const rectKilo = groupKilo\n  //             .selectAll('line')\n  //             .data(activitiesData)\n  //             .enter()\n  //             .append('line')\n  //             .attr('x1', function (d) {\n  //                 return x(d.day)\n  //             })\n  //             .attr('x2', function (d) {\n  //                 return x(d.day)\n  //             })\n  //             .attr('y2', '140')\n  //             .attr('y1', '140')\n  //             .attr('stroke', '#000')\n  //             .attr('stroke-width', '7px')\n  //             .attr('stroke-linecap', 'round')\n  //         rectKilo\n  //             .transition()\n  //             .duration(600)\n  //             .attr('y2', function (d) {\n  //                 return 140 - yKilo(d.kilogram)\n  //             })\n  //         const rectCalories = groupCalories\n  //             .selectAll('line')\n  //             .data(activitiesData)\n  //             .enter()\n  //             .append('line')\n  //             .attr('fill', '#E60000')\n  //             .attr('x1', function (d) {\n  //                 return x(d.day)\n  //             })\n  //             .attr('x2', function (d) {\n  //                 return x(d.day)\n  //             })\n  //             .attr('y2', '140')\n  //             .attr('y1', '140')\n  //             .attr('stroke', '#E60000')\n  //             .attr('stroke-width', '7px')\n  //             .attr('stroke-linecap', 'round')\n  //             .attr('class', 'overflow-hidden')\n  //         rectCalories\n  //             .transition()\n  //             .duration(600)\n  //             .attr('y1', function (d) {\n  //                 return y(d.calories)\n  //             })\n  //         graph\n  //             .append('g')\n  //             .append('rect')\n  //             .attr('width', 730)\n  //             .attr('height', 5)\n  //             .attr('fill', '#FBFBFB')\n  //             .attr('transform', `translate(-20, 140)`)\n  //         let tickLabels = ['1', '2', '3', '4', '5', '6', '7']\n  //         const axeX = d3\n  //             .axisBottom(x)\n  //             .tickSize(0)\n  //             .tickFormat((d, i) => tickLabels[i])\n  //         const axeY = d3.axisRight(yKilo).tickSize(0).ticks(3)\n  //         groupeX.call(axeX).style('font-size', '14px')\n  //         groupeXtop.call(axeX)\n  //         groupeXmiddle.call(axeX)\n  //         groupeX\n  //             .select('.domain')\n  //             .attr('stroke', '#DEDEDE')\n  //             .attr('stroke-width', 1)\n  //         groupeXtop\n  //             .select('.domain')\n  //             .attr('stroke', '#DEDEDE')\n  //             .attr('stroke-width', 1)\n  //             .attr('stroke-dasharray', '2')\n  //         groupeXmiddle\n  //             .select('.domain')\n  //             .attr('stroke', '#DEDEDE')\n  //             .attr('stroke-width', 1)\n  //             .attr('stroke-dasharray', '2')\n  //         groupeX\n  //             .selectAll('.tick text')\n  //             .attr('transform', 'translate(0, 10)')\n  //             .attr('class', 'text-gray-500')\n  //         groupeXmiddle.selectAll('.tick text').attr('opacity', '0')\n  //         groupeXtop.selectAll('.tick text').attr('opacity', '0')\n  //         groupeY.call(axeY).style('font-size', '14px')\n  //         groupeY.select('.domain').attr('stroke-width', 0)\n  //         groupeY\n  //             .selectAll('.tick text')\n  //             .attr('transform', 'translate(20, 0)')\n  //             .attr('class', 'text-gray-500')\n  //         /* MOUSE OVER ANIMATIONS */\n  //         activitiesData.map((data, index) => {\n  //             const animations = graph\n  //                 .append('g')\n  //                 .attr('transform', 'translate(-25, 0)')\n  //             animations\n  //                 .append('rect')\n  //                 .attr('id', `rect${index}`)\n  //                 .attr('width', 40)\n  //                 .attr('height', 55)\n  //                 .attr('fill', 'red')\n  //                 .attr('x', function (d) {\n  //                     return index * 113 + 50\n  //                 })\n  //                 .attr('y', -20)\n  //                 .attr('opacity', '0')\n  //             animations\n  //                 .append('rect')\n  //                 .attr('width', 50)\n  //                 .attr('height', 140)\n  //                 .attr('fill', '#C4C4C4')\n  //                 .attr('x', function (d) {\n  //                     return index * 113\n  //                 })\n  //                 .attr('opacity', '0')\n  //                 .on('mouseover', function () {\n  //                     d3.select(this)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '.3')\n  //                     d3.select(`#rect${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '1')\n  //                     d3.select(`#kg${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '1')\n  //                     d3.select(`#cal${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '1')\n  //                 })\n  //                 .on('mouseout', function () {\n  //                     d3.select(this)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '0')\n  //                     d3.select(`#rect${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '0')\n  //                     d3.select(`#kg${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '0')\n  //                     d3.select(`#cal${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '0')\n  //                 })\n  //             animations\n  //                 .append('text')\n  //                 .attr('id', 'kg' + index)\n  //                 .text(data.kilogram + 'kg')\n  //                 .attr('font-size', '8')\n  //                 .attr('fill', 'white')\n  //                 .attr('x', function (d) {\n  //                     return index * 113 + 60\n  //                 })\n  //                 .attr('opacity', '0')\n  //             animations\n  //                 .append('text')\n  //                 .attr('id', 'cal' + index)\n  //                 .text(data.calories + 'kCal')\n  //                 .attr('font-size', '8')\n  //                 .attr('fill', 'white')\n  //                 .attr('x', function (d) {\n  //                     return index * 113 + 55\n  //                 })\n  //                 .attr('y', 20)\n  //             // eslint-disable-next-line array-callback-return\n  //             return\n  //         })\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_c = BarChartD3;\nexport default BarChartD3;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChartD3\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/D3/BarChartD3.jsx"],"names":["d3","BarChartD3","data","console","log"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;;;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADsB,CAEtsBAAO,qCAAP;AACH;;KA7PQD,U;AA+PT,eAAeA,UAAf","sourcesContent":["import * as d3 from 'd3'\n\nfunction BarChartD3(data) {\n    console.log(data)\n    //const minKilo = d3.min(activitiesData, (d) => d.kilogram)\n    //         const maxKilo = d3.max(activitiesData, (d) => d.kilogram)\n    //         const max = d3.max(activitiesData, (d) => d.calories)\n\n    //         const x = d3\n    //             .scaleBand()\n    //             .domain(activitiesData.map((item) => item.day))\n    //             .range([0, 685])\n    //             .paddingInner(0.95)\n\n    //         const y = d3\n    //             .scaleLinear()\n    //             .domain([0, max + 50])\n    //             .range([140, 0])\n\n    //         const yKilo = d3\n    //             .scaleLinear()\n    //             .domain([minKilo - 1, maxKilo + 1])\n    //             .range([140, 0])\n\n    //         const svg = d3\n    //             .select('svg')\n    //             .attr('width', 825)\n    //             .attr('height', 320)\n    //             .attr('class', 'bg-gray-50')\n    //             .style('border-radius', '5px')\n\n    //         const graph = svg\n    //             .append('g')\n    //             .attr('width', 685)\n    //             .attr('height', 160)\n    //             .attr('transform', 'translate(50, 110)')\n\n    //         const groupeX = graph\n    //             .append('g')\n    //             .attr('transform', `translate(0, 139)`)\n\n    //         const groupeXmiddle = graph\n    //             .append('g')\n    //             .attr('transform', `translate(0, 70)`)\n\n    //         const groupeXtop = graph.append('g')\n\n    //         const groupeY = graph\n    //             .append('g')\n    //             .attr('transform', `translate(700, 0)`)\n\n    //         const groupKilo = graph\n    //             .append('g')\n    //             .attr('transform', `translate(-6, 0)`)\n    //             .attr('width', 685)\n    //             .attr('height', 140)\n\n    //         const groupCalories = graph\n    //             .append('g')\n    //             .attr('transform', `translate(6, 0)`)\n\n    //         const rectKilo = groupKilo\n    //             .selectAll('line')\n    //             .data(activitiesData)\n    //             .enter()\n    //             .append('line')\n    //             .attr('x1', function (d) {\n    //                 return x(d.day)\n    //             })\n    //             .attr('x2', function (d) {\n    //                 return x(d.day)\n    //             })\n    //             .attr('y2', '140')\n    //             .attr('y1', '140')\n    //             .attr('stroke', '#000')\n    //             .attr('stroke-width', '7px')\n    //             .attr('stroke-linecap', 'round')\n\n    //         rectKilo\n    //             .transition()\n    //             .duration(600)\n    //             .attr('y2', function (d) {\n    //                 return 140 - yKilo(d.kilogram)\n    //             })\n\n    //         const rectCalories = groupCalories\n    //             .selectAll('line')\n    //             .data(activitiesData)\n    //             .enter()\n    //             .append('line')\n    //             .attr('fill', '#E60000')\n    //             .attr('x1', function (d) {\n    //                 return x(d.day)\n    //             })\n    //             .attr('x2', function (d) {\n    //                 return x(d.day)\n    //             })\n    //             .attr('y2', '140')\n    //             .attr('y1', '140')\n    //             .attr('stroke', '#E60000')\n    //             .attr('stroke-width', '7px')\n    //             .attr('stroke-linecap', 'round')\n    //             .attr('class', 'overflow-hidden')\n\n    //         rectCalories\n    //             .transition()\n    //             .duration(600)\n    //             .attr('y1', function (d) {\n    //                 return y(d.calories)\n    //             })\n\n    //         graph\n    //             .append('g')\n    //             .append('rect')\n    //             .attr('width', 730)\n    //             .attr('height', 5)\n    //             .attr('fill', '#FBFBFB')\n    //             .attr('transform', `translate(-20, 140)`)\n\n    //         let tickLabels = ['1', '2', '3', '4', '5', '6', '7']\n\n    //         const axeX = d3\n    //             .axisBottom(x)\n    //             .tickSize(0)\n    //             .tickFormat((d, i) => tickLabels[i])\n    //         const axeY = d3.axisRight(yKilo).tickSize(0).ticks(3)\n\n    //         groupeX.call(axeX).style('font-size', '14px')\n    //         groupeXtop.call(axeX)\n    //         groupeXmiddle.call(axeX)\n\n    //         groupeX\n    //             .select('.domain')\n    //             .attr('stroke', '#DEDEDE')\n    //             .attr('stroke-width', 1)\n\n    //         groupeXtop\n    //             .select('.domain')\n    //             .attr('stroke', '#DEDEDE')\n    //             .attr('stroke-width', 1)\n    //             .attr('stroke-dasharray', '2')\n\n    //         groupeXmiddle\n    //             .select('.domain')\n    //             .attr('stroke', '#DEDEDE')\n    //             .attr('stroke-width', 1)\n    //             .attr('stroke-dasharray', '2')\n\n    //         groupeX\n    //             .selectAll('.tick text')\n    //             .attr('transform', 'translate(0, 10)')\n    //             .attr('class', 'text-gray-500')\n\n    //         groupeXmiddle.selectAll('.tick text').attr('opacity', '0')\n    //         groupeXtop.selectAll('.tick text').attr('opacity', '0')\n\n    //         groupeY.call(axeY).style('font-size', '14px')\n\n    //         groupeY.select('.domain').attr('stroke-width', 0)\n    //         groupeY\n    //             .selectAll('.tick text')\n    //             .attr('transform', 'translate(20, 0)')\n    //             .attr('class', 'text-gray-500')\n\n    //         /* MOUSE OVER ANIMATIONS */\n\n    //         activitiesData.map((data, index) => {\n    //             const animations = graph\n    //                 .append('g')\n    //                 .attr('transform', 'translate(-25, 0)')\n\n    //             animations\n    //                 .append('rect')\n    //                 .attr('id', `rect${index}`)\n    //                 .attr('width', 40)\n    //                 .attr('height', 55)\n    //                 .attr('fill', 'red')\n    //                 .attr('x', function (d) {\n    //                     return index * 113 + 50\n    //                 })\n    //                 .attr('y', -20)\n    //                 .attr('opacity', '0')\n\n    //             animations\n    //                 .append('rect')\n    //                 .attr('width', 50)\n    //                 .attr('height', 140)\n    //                 .attr('fill', '#C4C4C4')\n    //                 .attr('x', function (d) {\n    //                     return index * 113\n    //                 })\n    //                 .attr('opacity', '0')\n    //                 .on('mouseover', function () {\n    //                     d3.select(this)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '.3')\n    //                     d3.select(`#rect${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '1')\n    //                     d3.select(`#kg${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '1')\n    //                     d3.select(`#cal${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '1')\n    //                 })\n    //                 .on('mouseout', function () {\n    //                     d3.select(this)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '0')\n    //                     d3.select(`#rect${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '0')\n    //                     d3.select(`#kg${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '0')\n    //                     d3.select(`#cal${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '0')\n    //                 })\n\n    //             animations\n    //                 .append('text')\n    //                 .attr('id', 'kg' + index)\n    //                 .text(data.kilogram + 'kg')\n    //                 .attr('font-size', '8')\n    //                 .attr('fill', 'white')\n    //                 .attr('x', function (d) {\n    //                     return index * 113 + 60\n    //                 })\n    //                 .attr('opacity', '0')\n\n    //             animations\n    //                 .append('text')\n    //                 .attr('id', 'cal' + index)\n    //                 .text(data.calories + 'kCal')\n    //                 .attr('font-size', '8')\n    //                 .attr('fill', 'white')\n    //                 .attr('x', function (d) {\n    //                     return index * 113 + 55\n    //                 })\n    //                 .attr('y', 20)\n\n    //             // eslint-disable-next-line array-callback-return\n    //             return\n    //         })\n    return <></>\n}\n\nexport default BarChartD3\n"]},"metadata":{},"sourceType":"module"}