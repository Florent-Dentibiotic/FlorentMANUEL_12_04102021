{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Weight.jsx\",\n    _s = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weight({\n  activitiesData\n}) {\n  _s();\n\n  const [SvgWeight, setSvgWeight] = useState();\n  useEffect(() => {\n    const SvgWeightCreation = () => {\n      const minKilo = d3.min(activitiesData, d => d.kilogram);\n      const maxKilo = d3.max(activitiesData, d => d.kilogram);\n      const max = d3.max(activitiesData, d => d.calories);\n      const x = d3.scaleBand().domain(activitiesData.map(item => item.day)).range([0, 685]).paddingInner(0.95);\n      const y = d3.scaleLinear().domain([0, max + 50]).range([140, 0]);\n      const yKilo = d3.scaleLinear().domain([minKilo - 1, maxKilo + 1]).range([140, 0]);\n      const svg = d3.select('svg').attr('width', 825).attr('height', 320).attr('class', 'bg-gray-50').style('border-radius', '5px');\n      const graph = svg.append('g').attr('width', 685).attr('height', 140).attr('transform', 'translate(50, 110)');\n      const groupeX = graph.append('g').attr('transform', `translate(0, 140)`);\n      const groupeXmiddle = graph.append('g').attr('transform', `translate(0, 70)`);\n      const groupeXtop = graph.append('g');\n      const groupeY = graph.append('g').attr('transform', `translate(700, 0)`);\n      const groupKilo = graph.append('g').attr('transform', `translate(-6, 0)`).attr('width', 685).attr('height', 140);\n      const groupCalories = graph.append('g').attr('transform', `translate(6, 0)`);\n      const rectKilo = groupKilo.selectAll('line').data(activitiesData).enter().append('line').attr('x1', function (d) {\n        return x(d.day);\n      }).attr('x2', function (d) {\n        return x(d.day);\n      }).attr('y1', function (d) {\n        return 140 - yKilo(d.kilogram);\n      }).attr('y2', '140').attr('stroke', '#000').attr('stroke-width', '7px').attr('stroke-linecap', 'round').attr('class', 'overflow-hidden');\n      const rectCalories = groupCalories // .append('path')\n      // .attr('fill', 'none')\n      // .attr('stroke', '#E60000')\n      // .attr('stroke-width', '7px')\n      // .attr('stroke-linecap', 'round')\n      .selectAll('line').data(activitiesData).enter().append('line').attr('fill', '#E60000').attr('x1', function (d) {\n        return x(d.day);\n      }).attr('x2', function (d) {\n        return x(d.day);\n      }).attr('y2', '140').attr('y1', function (d) {\n        return y(d.calories);\n      }).attr('stroke', '#E60000').attr('stroke-width', '7px').attr('stroke-linecap', 'round').attr('class', 'overflow-hidden');\n      graph.append('g').append('rect').attr('width', 730).attr('height', 5).attr('fill', '#E60000').attr('transform', `translate(0, 140)`);\n      let tickLabels = ['1', '2', '3', '4', '5', '6', '7'];\n      const axeX = d3.axisBottom(x).tickSize(0).tickFormat((d, i) => tickLabels[i]);\n      const axeY = d3.axisRight(yKilo).tickSize(0).ticks(3);\n      groupeX.call(axeX).style('font-size', '14px');\n      groupeXtop.call(axeX);\n      groupeXmiddle.call(axeX);\n      groupeX.select('.domain').attr('stroke', '#DEDEDE').attr('stroke-width', 1);\n      groupeXtop.select('.domain').attr('stroke', '#DEDEDE').attr('stroke-width', 1).attr('stroke-dasharray', '2');\n      groupeXmiddle.select('.domain').attr('stroke', '#DEDEDE').attr('stroke-width', 1).attr('stroke-dasharray', '2');\n      groupeX.selectAll('.tick text').attr('transform', 'translate(0, 10)').attr('class', 'text-gray-500');\n      groupeXmiddle.selectAll('.tick text').attr('class', 'text-gray-50');\n      groupeXtop.selectAll('.tick text').attr('class', 'text-gray-50');\n      groupeY.call(axeY).style('font-size', '14px');\n      groupeY.select('.domain').attr('stroke-width', 0);\n      groupeY.selectAll('.tick text').attr('transform', 'translate(20, 0)').attr('class', 'text-gray-500');\n    };\n\n    setSvgWeight(SvgWeightCreation);\n  }, [SvgWeight, activitiesData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-50 rounded-md col-span-3 flex items-center justify-center\",\n    children: [console.log(activitiesData), /*#__PURE__*/_jsxDEV(\"svg\", {\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"32\",\n        y: \"50\",\n        fill: \"#20253A\",\n        \"font-size\": \"15\",\n        children: \"Activit\\xE9 quotidienne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"520\",\n        cy: \"44\",\n        r: \"4\",\n        fill: \"#20253A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"535\",\n        y: \"50\",\n        fill: \"#20253A\",\n        \"font-size\": \"15\",\n        children: \"Poids (kg)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"620\",\n        cy: \"44\",\n        r: \"4\",\n        fill: \"#E60000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"635\",\n        y: \"50\",\n        fill: \"#20253A\",\n        \"font-size\": \"15\",\n        children: \"Calories Brul\\xE9es (kCal)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weight, \"p63c14cVOyikPAPvnhVf/vddx7Y=\");\n\n_c = Weight;\nexport default Weight;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weight\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Weight.jsx"],"names":["d3","useState","useEffect","Weight","activitiesData","SvgWeight","setSvgWeight","SvgWeightCreation","minKilo","min","d","kilogram","maxKilo","max","calories","x","scaleBand","domain","map","item","day","range","paddingInner","y","scaleLinear","yKilo","svg","select","attr","style","graph","append","groupeX","groupeXmiddle","groupeXtop","groupeY","groupKilo","groupCalories","rectKilo","selectAll","data","enter","rectCalories","tickLabels","axeX","axisBottom","tickSize","tickFormat","i","axeY","axisRight","ticks","call","console","log"],"mappings":"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","sourcesContent":["import * as d3 from 'd3'\nimport { useState, useEffect } from 'react'\n\nfunction Weight({ activitiesData }) {\n    const [SvgWeight, setSvgWeight] = useState()\n\n    useEffect(() => {\n        const SvgWeightCreation = () => {\n            const minKilo = d3.min(activitiesData, (d) => d.kilogram)\n            const maxKilo = d3.max(activitiesData, (d) => d.kilogram)\n            const max = d3.max(activitiesData, (d) => d.calories)\n\n            const x = d3\n                .scaleBand()\n                .domain(activitiesData.map((item) => item.day))\n                .range([0, 685])\n                .paddingInner(0.95)\n\n            const y = d3\n                .scaleLinear()\n                .domain([0, max + 50])\n                .range([140, 0])\n\n            const yKilo = d3\n                .scaleLinear()\n                .domain([minKilo - 1, maxKilo + 1])\n                .range([140, 0])\n\n            const svg = d3\n                .select('svg')\n                .attr('width', 825)\n                .attr('height', 320)\n                .attr('class', 'bg-gray-50')\n                .style('border-radius', '5px')\n\n            const graph = svg\n                .append('g')\n                .attr('width', 685)\n                .attr('height', 140)\n                .attr('transform', 'translate(50, 110)')\n\n            const groupeX = graph\n                .append('g')\n                .attr('transform', `translate(0, 140)`)\n\n            const groupeXmiddle = graph\n                .append('g')\n                .attr('transform', `translate(0, 70)`)\n\n            const groupeXtop = graph.append('g')\n\n            const groupeY = graph\n                .append('g')\n                .attr('transform', `translate(700, 0)`)\n\n            const groupKilo = graph\n                .append('g')\n                .attr('transform', `translate(-6, 0)`)\n                .attr('width', 685)\n                .attr('height', 140)\n\n            const groupCalories = graph\n                .append('g')\n                .attr('transform', `translate(6, 0)`)\n\n            const rectKilo = groupKilo\n                .selectAll('line')\n                .data(activitiesData)\n                .enter()\n                .append('line')\n                .attr('x1', function (d) {\n                    return x(d.day)\n                })\n                .attr('x2', function (d) {\n                    return x(d.day)\n                })\n                .attr('y1', function (d) {\n                    return 140 - yKilo(d.kilogram)\n                })\n                .attr('y2', '140')\n                .attr('stroke', '#000')\n                .attr('stroke-width', '7px')\n                .attr('stroke-linecap', 'round')\n                .attr('class', 'overflow-hidden')\n\n            const rectCalories = groupCalories\n                // .append('path')\n                // .attr('fill', 'none')\n                // .attr('stroke', '#E60000')\n                // .attr('stroke-width', '7px')\n                // .attr('stroke-linecap', 'round')\n                .selectAll('line')\n                .data(activitiesData)\n                .enter()\n                .append('line')\n                .attr('fill', '#E60000')\n                .attr('x1', function (d) {\n                    return x(d.day)\n                })\n                .attr('x2', function (d) {\n                    return x(d.day)\n                })\n                .attr('y2', '140')\n                .attr('y1', function (d) {\n                    return y(d.calories)\n                })\n                .attr('stroke', '#E60000')\n                .attr('stroke-width', '7px')\n                .attr('stroke-linecap', 'round')\n                .attr('class', 'overflow-hidden')\n\n            graph\n                .append('g')\n                .append('rect')\n                .attr('width', 730)\n                .attr('height', 5)\n                .attr('fill', '#E60000')\n                .attr('transform', `translate(0, 140)`)\n\n            let tickLabels = ['1', '2', '3', '4', '5', '6', '7']\n\n            const axeX = d3\n                .axisBottom(x)\n                .tickSize(0)\n                .tickFormat((d, i) => tickLabels[i])\n            const axeY = d3.axisRight(yKilo).tickSize(0).ticks(3)\n\n            groupeX.call(axeX).style('font-size', '14px')\n            groupeXtop.call(axeX)\n            groupeXmiddle.call(axeX)\n\n            groupeX\n                .select('.domain')\n                .attr('stroke', '#DEDEDE')\n                .attr('stroke-width', 1)\n\n            groupeXtop\n                .select('.domain')\n                .attr('stroke', '#DEDEDE')\n                .attr('stroke-width', 1)\n                .attr('stroke-dasharray', '2')\n\n            groupeXmiddle\n                .select('.domain')\n                .attr('stroke', '#DEDEDE')\n                .attr('stroke-width', 1)\n                .attr('stroke-dasharray', '2')\n\n            groupeX\n                .selectAll('.tick text')\n                .attr('transform', 'translate(0, 10)')\n                .attr('class', 'text-gray-500')\n\n            groupeXmiddle.selectAll('.tick text').attr('class', 'text-gray-50')\n            groupeXtop.selectAll('.tick text').attr('class', 'text-gray-50')\n\n            groupeY.call(axeY).style('font-size', '14px')\n\n            groupeY.select('.domain').attr('stroke-width', 0)\n            groupeY\n                .selectAll('.tick text')\n                .attr('transform', 'translate(20, 0)')\n                .attr('class', 'text-gray-500')\n        }\n\n        setSvgWeight(SvgWeightCreation)\n    }, [SvgWeight, activitiesData])\n\n    return (\n        <div className=\"bg-gray-50 rounded-md col-span-3 flex items-center justify-center\">\n            {console.log(activitiesData)}\n            <svg>\n                <text x=\"32\" y=\"50\" fill=\"#20253A\" font-size=\"15\">\n                    Activité quotidienne\n                </text>\n                <circle cx=\"520\" cy=\"44\" r=\"4\" fill=\"#20253A\" />\n                <text x=\"535\" y=\"50\" fill=\"#20253A\" font-size=\"15\">\n                    Poids (kg)\n                </text>\n                <circle cx=\"620\" cy=\"44\" r=\"4\" fill=\"#E60000\" />\n                <text x=\"635\" y=\"50\" fill=\"#20253A\" font-size=\"15\">\n                    Calories Brulées (kCal)\n                </text>\n            </svg>\n        </div>\n    )\n}\n\nexport default Weight\n"]},"metadata":{},"sourceType":"module"}