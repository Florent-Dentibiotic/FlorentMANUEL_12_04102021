{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Radar.jsx\",\n    _s = $RefreshSig$();\n\nimport * as d3 from 'd3';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Radar(radarData) {\n  _s();\n\n  const [SvgWeight, setSvgWeight] = useState();\n  let x = d3.scaleLinear().domain(d3.extent(radarData.radarData.data, d => d.day)).range([0, 250]);\n  let y = d3.scaleLinear().domain([0, d3.max(radarData.radarData.data, d => d.value)]).range([130, 0]); //const Days = ['L', 'M', 'M', 'J', 'V', 'S', 'D']\n\n  useEffect(() => {\n    let valueLine = d3.line().x(function (d) {\n      return x(d.day);\n    }).y(function (d) {\n      return y(d.sessionLength);\n    }).curve(d3.curveBundle);\n    const SvgWeightCreation = d3.select('.radar-box').append('svg').attr('width', 250).attr('height', 250).style('background', '#000').style('border-radius', '5px').append('g').attr('transform', 'translate(0, 80)').append('path').attr('fill', 'none').attr('stroke', '#fff').attr('stroke-width', '2px').attr('d', valueLine(radarData.radarData.data)); // const groupX = SvgWeightCreation.append('g').attr(\n    //     'transform',\n    //     'translate(0, 210)'\n    // )\n    // const axeDays = d3.scaleOrdinal(Days)\n    // const axeX = d3.axisBottom(axeDays)\n    // groupX.call(axeX).style('font-size', '14px')\n\n    setSvgWeight(SvgWeightCreation);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [radarData.radarData.data[0].value, \" peach\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Radar, \"p63c14cVOyikPAPvnhVf/vddx7Y=\");\n\n_c = Radar;\nexport default Radar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Radar\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/Radar.jsx"],"names":["d3","useEffect","useState","Radar","radarData","SvgWeight","setSvgWeight","x","scaleLinear","domain","extent","data","d","day","range","y","max","value","valueLine","line","sessionLength","curve","curveBundle","SvgWeightCreation","select","append","attr","style"],"mappings":";;;AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,KAAT,CAAeC,SAAf,EAA0B;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,EAA1C;AACA,MAAIK,CAAC,GAAGP,EAAE,CACLQ,WADG,GAEHC,MAFG,CAEIT,EAAE,CAACU,MAAH,CAAUN,SAAS,CAACA,SAAV,CAAoBO,IAA9B,EAAqCC,CAAD,IAAOA,CAAC,CAACC,GAA7C,CAFJ,EAGHC,KAHG,CAGG,CAAC,CAAD,EAAI,GAAJ,CAHH,CAAR;AAKA,MAAIC,CAAC,GAAGf,EAAE,CACLQ,WADG,GAEHC,MAFG,CAEI,CAAC,CAAD,EAAIT,EAAE,CAACgB,GAAH,CAAOZ,SAAS,CAACA,SAAV,CAAoBO,IAA3B,EAAkCC,CAAD,IAAOA,CAAC,CAACK,KAA1C,CAAJ,CAFJ,EAGHH,KAHG,CAGG,CAAC,GAAD,EAAM,CAAN,CAHH,CAAR,CAPsB,CAYtB;;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,SAAS,GAAGlB,EAAE,CACbmB,IADW,GAEXZ,CAFW,CAET,UAAUK,CAAV,EAAa;AACZ,aAAOL,CAAC,CAACK,CAAC,CAACC,GAAH,CAAR;AACH,KAJW,EAKXE,CALW,CAKT,UAAUH,CAAV,EAAa;AACZ,aAAOG,CAAC,CAACH,CAAC,CAACQ,aAAH,CAAR;AACH,KAPW,EAQXC,KARW,CAQLrB,EAAE,CAACsB,WARE,CAAhB;AAUA,UAAMC,iBAAiB,GAAGvB,EAAE,CACvBwB,MADqB,CACd,YADc,EAErBC,MAFqB,CAEd,KAFc,EAGrBC,IAHqB,CAGhB,OAHgB,EAGP,GAHO,EAIrBA,IAJqB,CAIhB,QAJgB,EAIN,GAJM,EAKrBC,KALqB,CAKf,YALe,EAKD,MALC,EAMrBA,KANqB,CAMf,eANe,EAME,KANF,EAOrBF,MAPqB,CAOd,GAPc,EAQrBC,IARqB,CAQhB,WARgB,EAQH,kBARG,EASrBD,MATqB,CASd,MATc,EAUrBC,IAVqB,CAUhB,MAVgB,EAUR,MAVQ,EAWrBA,IAXqB,CAWhB,QAXgB,EAWN,MAXM,EAYrBA,IAZqB,CAYhB,cAZgB,EAYA,KAZA,EAarBA,IAbqB,CAahB,GAbgB,EAaXR,SAAS,CAACd,SAAS,CAACA,SAAV,CAAoBO,IAArB,CAbE,CAA1B,CAXY,CA0BZ;AACA;AACA;AACA;AAEA;AAEA;AAEA;;AAEAL,IAAAA,YAAY,CAACiB,iBAAD,CAAZ;AACH,GAtCQ,EAsCN,EAtCM,CAAT;AAuCA,sBAAO;AAAA,eAAMnB,SAAS,CAACA,SAAV,CAAoBO,IAApB,CAAyB,CAAzB,EAA4BM,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAtDQd,K;;KAAAA,K;AAwDT,eAAeA,KAAf","sourcesContent":["import * as d3 from 'd3'\nimport { useEffect, useState } from 'react'\n\nfunction Radar(radarData) {\n    const [SvgWeight, setSvgWeight] = useState()\n    let x = d3\n        .scaleLinear()\n        .domain(d3.extent(radarData.radarData.data, (d) => d.day))\n        .range([0, 250])\n\n    let y = d3\n        .scaleLinear()\n        .domain([0, d3.max(radarData.radarData.data, (d) => d.value)])\n        .range([130, 0])\n\n    //const Days = ['L', 'M', 'M', 'J', 'V', 'S', 'D']\n\n    useEffect(() => {\n        let valueLine = d3\n            .line()\n            .x(function (d) {\n                return x(d.day)\n            })\n            .y(function (d) {\n                return y(d.sessionLength)\n            })\n            .curve(d3.curveBundle)\n\n        const SvgWeightCreation = d3\n            .select('.radar-box')\n            .append('svg')\n            .attr('width', 250)\n            .attr('height', 250)\n            .style('background', '#000')\n            .style('border-radius', '5px')\n            .append('g')\n            .attr('transform', 'translate(0, 80)')\n            .append('path')\n            .attr('fill', 'none')\n            .attr('stroke', '#fff')\n            .attr('stroke-width', '2px')\n            .attr('d', valueLine(radarData.radarData.data))\n\n        // const groupX = SvgWeightCreation.append('g').attr(\n        //     'transform',\n        //     'translate(0, 210)'\n        // )\n\n        // const axeDays = d3.scaleOrdinal(Days)\n\n        // const axeX = d3.axisBottom(axeDays)\n\n        // groupX.call(axeX).style('font-size', '14px')\n\n        setSvgWeight(SvgWeightCreation)\n    }, [])\n    return <div>{radarData.radarData.data[0].value} peach</div>\n}\n\nexport default Radar\n"]},"metadata":{},"sourceType":"module"}