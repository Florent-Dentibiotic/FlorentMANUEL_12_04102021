{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/BarChart.jsx\",\n    _s = $RefreshSig$();\n\nimport useFetchActivities from '../services/ActivityService';\nimport { useParams } from 'react-router';\nimport BarChartD3 from '../D3/BarChartD3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BarChart() {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const {\n    activitiesData,\n    activitiesLoaded,\n    errorActivities\n  } = useFetchActivities(userId.slice(-2)); // const [SvgWeight, setSvgWeight] = useState()\n  // useEffect(() => {\n  //     const SvgWeightCreation = () => {\n  //         const minKilo = d3.min(activitiesData, (d) => d.kilogram)\n  //         const maxKilo = d3.max(activitiesData, (d) => d.kilogram)\n  //         const max = d3.max(activitiesData, (d) => d.calories)\n  //         const x = d3\n  //             .scaleBand()\n  //             .domain(activitiesData.map((item) => item.day))\n  //             .range([0, 685])\n  //             .paddingInner(0.95)\n  //         const y = d3\n  //             .scaleLinear()\n  //             .domain([0, max + 50])\n  //             .range([140, 0])\n  //         const yKilo = d3\n  //             .scaleLinear()\n  //             .domain([minKilo - 1, maxKilo + 1])\n  //             .range([140, 0])\n  //         const svg = d3\n  //             .select('svg')\n  //             .attr('width', 825)\n  //             .attr('height', 320)\n  //             .attr('class', 'bg-gray-50')\n  //             .style('border-radius', '5px')\n  //         const graph = svg\n  //             .append('g')\n  //             .attr('width', 685)\n  //             .attr('height', 160)\n  //             .attr('transform', 'translate(50, 110)')\n  //         const groupeX = graph\n  //             .append('g')\n  //             .attr('transform', `translate(0, 139)`)\n  //         const groupeXmiddle = graph\n  //             .append('g')\n  //             .attr('transform', `translate(0, 70)`)\n  //         const groupeXtop = graph.append('g')\n  //         const groupeY = graph\n  //             .append('g')\n  //             .attr('transform', `translate(700, 0)`)\n  //         const groupKilo = graph\n  //             .append('g')\n  //             .attr('transform', `translate(-6, 0)`)\n  //             .attr('width', 685)\n  //             .attr('height', 140)\n  //         const groupCalories = graph\n  //             .append('g')\n  //             .attr('transform', `translate(6, 0)`)\n  //         const rectKilo = groupKilo\n  //             .selectAll('line')\n  //             .data(activitiesData)\n  //             .enter()\n  //             .append('line')\n  //             .attr('x1', function (d) {\n  //                 return x(d.day)\n  //             })\n  //             .attr('x2', function (d) {\n  //                 return x(d.day)\n  //             })\n  //             .attr('y2', '140')\n  //             .attr('y1', '140')\n  //             .attr('stroke', '#000')\n  //             .attr('stroke-width', '7px')\n  //             .attr('stroke-linecap', 'round')\n  //         rectKilo\n  //             .transition()\n  //             .duration(600)\n  //             .attr('y2', function (d) {\n  //                 return 140 - yKilo(d.kilogram)\n  //             })\n  //         const rectCalories = groupCalories\n  //             .selectAll('line')\n  //             .data(activitiesData)\n  //             .enter()\n  //             .append('line')\n  //             .attr('fill', '#E60000')\n  //             .attr('x1', function (d) {\n  //                 return x(d.day)\n  //             })\n  //             .attr('x2', function (d) {\n  //                 return x(d.day)\n  //             })\n  //             .attr('y2', '140')\n  //             .attr('y1', '140')\n  //             .attr('stroke', '#E60000')\n  //             .attr('stroke-width', '7px')\n  //             .attr('stroke-linecap', 'round')\n  //             .attr('class', 'overflow-hidden')\n  //         rectCalories\n  //             .transition()\n  //             .duration(600)\n  //             .attr('y1', function (d) {\n  //                 return y(d.calories)\n  //             })\n  //         graph\n  //             .append('g')\n  //             .append('rect')\n  //             .attr('width', 730)\n  //             .attr('height', 5)\n  //             .attr('fill', '#FBFBFB')\n  //             .attr('transform', `translate(-20, 140)`)\n  //         let tickLabels = ['1', '2', '3', '4', '5', '6', '7']\n  //         const axeX = d3\n  //             .axisBottom(x)\n  //             .tickSize(0)\n  //             .tickFormat((d, i) => tickLabels[i])\n  //         const axeY = d3.axisRight(yKilo).tickSize(0).ticks(3)\n  //         groupeX.call(axeX).style('font-size', '14px')\n  //         groupeXtop.call(axeX)\n  //         groupeXmiddle.call(axeX)\n  //         groupeX\n  //             .select('.domain')\n  //             .attr('stroke', '#DEDEDE')\n  //             .attr('stroke-width', 1)\n  //         groupeXtop\n  //             .select('.domain')\n  //             .attr('stroke', '#DEDEDE')\n  //             .attr('stroke-width', 1)\n  //             .attr('stroke-dasharray', '2')\n  //         groupeXmiddle\n  //             .select('.domain')\n  //             .attr('stroke', '#DEDEDE')\n  //             .attr('stroke-width', 1)\n  //             .attr('stroke-dasharray', '2')\n  //         groupeX\n  //             .selectAll('.tick text')\n  //             .attr('transform', 'translate(0, 10)')\n  //             .attr('class', 'text-gray-500')\n  //         groupeXmiddle.selectAll('.tick text').attr('opacity', '0')\n  //         groupeXtop.selectAll('.tick text').attr('opacity', '0')\n  //         groupeY.call(axeY).style('font-size', '14px')\n  //         groupeY.select('.domain').attr('stroke-width', 0)\n  //         groupeY\n  //             .selectAll('.tick text')\n  //             .attr('transform', 'translate(20, 0)')\n  //             .attr('class', 'text-gray-500')\n  //         /* MOUSE OVER ANIMATIONS */\n  //         activitiesData.map((data, index) => {\n  //             const animations = graph\n  //                 .append('g')\n  //                 .attr('transform', 'translate(-25, 0)')\n  //             animations\n  //                 .append('rect')\n  //                 .attr('id', `rect${index}`)\n  //                 .attr('width', 40)\n  //                 .attr('height', 55)\n  //                 .attr('fill', 'red')\n  //                 .attr('x', function (d) {\n  //                     return index * 113 + 50\n  //                 })\n  //                 .attr('y', -20)\n  //                 .attr('opacity', '0')\n  //             animations\n  //                 .append('rect')\n  //                 .attr('width', 50)\n  //                 .attr('height', 140)\n  //                 .attr('fill', '#C4C4C4')\n  //                 .attr('x', function (d) {\n  //                     return index * 113\n  //                 })\n  //                 .attr('opacity', '0')\n  //                 .on('mouseover', function () {\n  //                     d3.select(this)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '.3')\n  //                     d3.select(`#rect${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '1')\n  //                     d3.select(`#kg${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '1')\n  //                     d3.select(`#cal${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '1')\n  //                 })\n  //                 .on('mouseout', function () {\n  //                     d3.select(this)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '0')\n  //                     d3.select(`#rect${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '0')\n  //                     d3.select(`#kg${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '0')\n  //                     d3.select(`#cal${index}`)\n  //                         .transition()\n  //                         .duration('150')\n  //                         .attr('opacity', '0')\n  //                 })\n  //             animations\n  //                 .append('text')\n  //                 .attr('id', 'kg' + index)\n  //                 .text(data.kilogram + 'kg')\n  //                 .attr('font-size', '8')\n  //                 .attr('fill', 'white')\n  //                 .attr('x', function (d) {\n  //                     return index * 113 + 60\n  //                 })\n  //                 .attr('opacity', '0')\n  //             animations\n  //                 .append('text')\n  //                 .attr('id', 'cal' + index)\n  //                 .text(data.calories + 'kCal')\n  //                 .attr('font-size', '8')\n  //                 .attr('fill', 'white')\n  //                 .attr('x', function (d) {\n  //                     return index * 113 + 55\n  //                 })\n  //                 .attr('y', 20)\n  //             // eslint-disable-next-line array-callback-return\n  //             return\n  //         })\n  //     }\n  //     setSvgWeight(SvgWeightCreation)\n  // }, [SvgWeight, activitiesData])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', activitiesLoaded && /*#__PURE__*/_jsxDEV(BarChartD3, {\n      data: activitiesData.userSessions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"bg-gray-50 rounded\",\n      width: \"825\",\n      height: \"320\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"32\",\n        y: \"50\",\n        fill: \"#20253A\",\n        fontSize: \"15\",\n        children: \"Activit\\xE9 quotidienne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"520\",\n        cy: \"44\",\n        r: \"4\",\n        fill: \"#20253A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"535\",\n        y: \"50\",\n        fill: \"#20253A\",\n        fontSize: \"15\",\n        children: \"Poids (kg)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"620\",\n        cy: \"44\",\n        r: \"4\",\n        fill: \"#E60000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"635\",\n        y: \"50\",\n        fill: \"#20253A\",\n        fontSize: \"15\",\n        children: \"Calories Brul\\xE9es (kCal)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BarChart, \"Z9qnfYZS8F1ar8kJBrQGAZXBfQ4=\", false, function () {\n  return [useParams, useFetchActivities];\n});\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/components/BarChart.jsx"],"names":["useFetchActivities","useParams","BarChartD3","BarChart","userId","activitiesData","activitiesLoaded","errorActivities","slice","userSessions"],"mappings":";;;AAAA,OAAOA,kBAAP,MAA+B,6BAA/B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AACA,QAAM;AAAEI,IAAAA,cAAF;AAAkBC,IAAAA,gBAAlB;AAAoCC,IAAAA;AAApC,MACFP,kBAAkB,CAACI,MAAM,CAACI,KAAP,CAAa,CAAC,CAAd,CAAD,CADtB,CAFgB,CAIhsBACI;AAAA,eACK,GADL,EAEKF,gBAAgB,iBACb,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED,cAAc,CAACI;AAAjC;AAAA;AAAA;AAAA;AAAA,YAHR,eAKI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,KAAK,EAAC,KAA1C;AAAgD,MAAA,MAAM,EAAC,KAAvD;AAAA,8BACI;AAAM,QAAA,CAAC,EAAC,IAAR;AAAa,QAAA,CAAC,EAAC,IAAf;AAAoB,QAAA,IAAI,EAAC,SAAzB;AAAmC,QAAA,QAAQ,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,EAAE,EAAC,KAAX;AAAiB,QAAA,EAAE,EAAC,IAApB;AAAyB,QAAA,CAAC,EAAC,GAA3B;AAA+B,QAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAM,QAAA,CAAC,EAAC,KAAR;AAAc,QAAA,CAAC,EAAC,IAAhB;AAAqB,QAAA,IAAI,EAAC,SAA1B;AAAoC,QAAA,QAAQ,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAQ,QAAA,EAAE,EAAC,KAAX;AAAiB,QAAA,EAAE,EAAC,IAApB;AAAyB,QAAA,CAAC,EAAC,GAA3B;AAA+B,QAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAM,QAAA,CAAC,EAAC,KAAR;AAAc,QAAA,CAAC,EAAC,IAAhB;AAAqB,QAAA,IAAI,EAAC,SAA1B;AAAoC,QAAA,QAAQ,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAqBH;;GA5RQN,Q;UACcF,S,EAEfD,kB;;;KAHCG,Q;AA8RT,eAAeA,QAAf","sourcesContent":["import useFetchActivities from '../services/ActivityService'\nimport { useParams } from 'react-router'\nimport BarChartD3 from '../D3/BarChartD3'\n\nfunction BarChart() {\n    const { userId } = useParams()\n    const { activitiesData, activitiesLoaded, errorActivities } =\n        useFetchActivities(userId.slice(-2))\n    // const [SvgWeight, setSvgWeight] = useState()\n\n    // useEffect(() => {\n    //     const SvgWeightCreation = () => {\n    //         const minKilo = d3.min(activitiesData, (d) => d.kilogram)\n    //         const maxKilo = d3.max(activitiesData, (d) => d.kilogram)\n    //         const max = d3.max(activitiesData, (d) => d.calories)\n\n    //         const x = d3\n    //             .scaleBand()\n    //             .domain(activitiesData.map((item) => item.day))\n    //             .range([0, 685])\n    //             .paddingInner(0.95)\n\n    //         const y = d3\n    //             .scaleLinear()\n    //             .domain([0, max + 50])\n    //             .range([140, 0])\n\n    //         const yKilo = d3\n    //             .scaleLinear()\n    //             .domain([minKilo - 1, maxKilo + 1])\n    //             .range([140, 0])\n\n    //         const svg = d3\n    //             .select('svg')\n    //             .attr('width', 825)\n    //             .attr('height', 320)\n    //             .attr('class', 'bg-gray-50')\n    //             .style('border-radius', '5px')\n\n    //         const graph = svg\n    //             .append('g')\n    //             .attr('width', 685)\n    //             .attr('height', 160)\n    //             .attr('transform', 'translate(50, 110)')\n\n    //         const groupeX = graph\n    //             .append('g')\n    //             .attr('transform', `translate(0, 139)`)\n\n    //         const groupeXmiddle = graph\n    //             .append('g')\n    //             .attr('transform', `translate(0, 70)`)\n\n    //         const groupeXtop = graph.append('g')\n\n    //         const groupeY = graph\n    //             .append('g')\n    //             .attr('transform', `translate(700, 0)`)\n\n    //         const groupKilo = graph\n    //             .append('g')\n    //             .attr('transform', `translate(-6, 0)`)\n    //             .attr('width', 685)\n    //             .attr('height', 140)\n\n    //         const groupCalories = graph\n    //             .append('g')\n    //             .attr('transform', `translate(6, 0)`)\n\n    //         const rectKilo = groupKilo\n    //             .selectAll('line')\n    //             .data(activitiesData)\n    //             .enter()\n    //             .append('line')\n    //             .attr('x1', function (d) {\n    //                 return x(d.day)\n    //             })\n    //             .attr('x2', function (d) {\n    //                 return x(d.day)\n    //             })\n    //             .attr('y2', '140')\n    //             .attr('y1', '140')\n    //             .attr('stroke', '#000')\n    //             .attr('stroke-width', '7px')\n    //             .attr('stroke-linecap', 'round')\n\n    //         rectKilo\n    //             .transition()\n    //             .duration(600)\n    //             .attr('y2', function (d) {\n    //                 return 140 - yKilo(d.kilogram)\n    //             })\n\n    //         const rectCalories = groupCalories\n    //             .selectAll('line')\n    //             .data(activitiesData)\n    //             .enter()\n    //             .append('line')\n    //             .attr('fill', '#E60000')\n    //             .attr('x1', function (d) {\n    //                 return x(d.day)\n    //             })\n    //             .attr('x2', function (d) {\n    //                 return x(d.day)\n    //             })\n    //             .attr('y2', '140')\n    //             .attr('y1', '140')\n    //             .attr('stroke', '#E60000')\n    //             .attr('stroke-width', '7px')\n    //             .attr('stroke-linecap', 'round')\n    //             .attr('class', 'overflow-hidden')\n\n    //         rectCalories\n    //             .transition()\n    //             .duration(600)\n    //             .attr('y1', function (d) {\n    //                 return y(d.calories)\n    //             })\n\n    //         graph\n    //             .append('g')\n    //             .append('rect')\n    //             .attr('width', 730)\n    //             .attr('height', 5)\n    //             .attr('fill', '#FBFBFB')\n    //             .attr('transform', `translate(-20, 140)`)\n\n    //         let tickLabels = ['1', '2', '3', '4', '5', '6', '7']\n\n    //         const axeX = d3\n    //             .axisBottom(x)\n    //             .tickSize(0)\n    //             .tickFormat((d, i) => tickLabels[i])\n    //         const axeY = d3.axisRight(yKilo).tickSize(0).ticks(3)\n\n    //         groupeX.call(axeX).style('font-size', '14px')\n    //         groupeXtop.call(axeX)\n    //         groupeXmiddle.call(axeX)\n\n    //         groupeX\n    //             .select('.domain')\n    //             .attr('stroke', '#DEDEDE')\n    //             .attr('stroke-width', 1)\n\n    //         groupeXtop\n    //             .select('.domain')\n    //             .attr('stroke', '#DEDEDE')\n    //             .attr('stroke-width', 1)\n    //             .attr('stroke-dasharray', '2')\n\n    //         groupeXmiddle\n    //             .select('.domain')\n    //             .attr('stroke', '#DEDEDE')\n    //             .attr('stroke-width', 1)\n    //             .attr('stroke-dasharray', '2')\n\n    //         groupeX\n    //             .selectAll('.tick text')\n    //             .attr('transform', 'translate(0, 10)')\n    //             .attr('class', 'text-gray-500')\n\n    //         groupeXmiddle.selectAll('.tick text').attr('opacity', '0')\n    //         groupeXtop.selectAll('.tick text').attr('opacity', '0')\n\n    //         groupeY.call(axeY).style('font-size', '14px')\n\n    //         groupeY.select('.domain').attr('stroke-width', 0)\n    //         groupeY\n    //             .selectAll('.tick text')\n    //             .attr('transform', 'translate(20, 0)')\n    //             .attr('class', 'text-gray-500')\n\n    //         /* MOUSE OVER ANIMATIONS */\n\n    //         activitiesData.map((data, index) => {\n    //             const animations = graph\n    //                 .append('g')\n    //                 .attr('transform', 'translate(-25, 0)')\n\n    //             animations\n    //                 .append('rect')\n    //                 .attr('id', `rect${index}`)\n    //                 .attr('width', 40)\n    //                 .attr('height', 55)\n    //                 .attr('fill', 'red')\n    //                 .attr('x', function (d) {\n    //                     return index * 113 + 50\n    //                 })\n    //                 .attr('y', -20)\n    //                 .attr('opacity', '0')\n\n    //             animations\n    //                 .append('rect')\n    //                 .attr('width', 50)\n    //                 .attr('height', 140)\n    //                 .attr('fill', '#C4C4C4')\n    //                 .attr('x', function (d) {\n    //                     return index * 113\n    //                 })\n    //                 .attr('opacity', '0')\n    //                 .on('mouseover', function () {\n    //                     d3.select(this)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '.3')\n    //                     d3.select(`#rect${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '1')\n    //                     d3.select(`#kg${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '1')\n    //                     d3.select(`#cal${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '1')\n    //                 })\n    //                 .on('mouseout', function () {\n    //                     d3.select(this)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '0')\n    //                     d3.select(`#rect${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '0')\n    //                     d3.select(`#kg${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '0')\n    //                     d3.select(`#cal${index}`)\n    //                         .transition()\n    //                         .duration('150')\n    //                         .attr('opacity', '0')\n    //                 })\n\n    //             animations\n    //                 .append('text')\n    //                 .attr('id', 'kg' + index)\n    //                 .text(data.kilogram + 'kg')\n    //                 .attr('font-size', '8')\n    //                 .attr('fill', 'white')\n    //                 .attr('x', function (d) {\n    //                     return index * 113 + 60\n    //                 })\n    //                 .attr('opacity', '0')\n\n    //             animations\n    //                 .append('text')\n    //                 .attr('id', 'cal' + index)\n    //                 .text(data.calories + 'kCal')\n    //                 .attr('font-size', '8')\n    //                 .attr('fill', 'white')\n    //                 .attr('x', function (d) {\n    //                     return index * 113 + 55\n    //                 })\n    //                 .attr('y', 20)\n\n    //             // eslint-disable-next-line array-callback-return\n    //             return\n    //         })\n    //     }\n\n    //     setSvgWeight(SvgWeightCreation)\n    // }, [SvgWeight, activitiesData])\n\n    return (\n        <>\n            {' '}\n            {activitiesLoaded && (\n                <BarChartD3 data={activitiesData.userSessions} />\n            )}\n            <svg className=\"bg-gray-50 rounded\" width=\"825\" height=\"320\">\n                <text x=\"32\" y=\"50\" fill=\"#20253A\" fontSize=\"15\">\n                    Activité quotidienne\n                </text>\n                <circle cx=\"520\" cy=\"44\" r=\"4\" fill=\"#20253A\" />\n                <text x=\"535\" y=\"50\" fill=\"#20253A\" fontSize=\"15\">\n                    Poids (kg)\n                </text>\n                <circle cx=\"620\" cy=\"44\" r=\"4\" fill=\"#E60000\" />\n                <text x=\"635\" y=\"50\" fill=\"#20253A\" fontSize=\"15\">\n                    Calories Brulées (kCal)\n                </text>\n            </svg>\n        </>\n    )\n}\n\nexport default BarChart\n"]},"metadata":{},"sourceType":"module"}