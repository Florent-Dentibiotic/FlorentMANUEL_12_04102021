{"ast":null,"code":"var _jsxFileName = \"/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/pages/UserInterface.jsx\",\n    _s = $RefreshSig$();\n\nimport AsideNav from '../components/AsideNav';\nimport Header from '../components/Header';\nimport '../index.css';\nimport Weight from '../components/Weight'; //import { useState, useEffect } from 'react'\n\nimport KeyData from '../components/KeyData'; // import SessionDuration from '../components/SessionDuration'\n\nimport Score from '../components/Score';\nimport Radar from '../components/Radar';\nimport useFetch from '../services/UserService';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserInterface(props) {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const {\n    userData,\n    keyData,\n    activitiesData,\n    performanceData,\n    isLoaded,\n    error\n  } = useFetch(userId.slice(-2));\n  console.log(performanceData.cardio); //const { data } = userData\n  // const [userData, setUserData] = useState({})\n  // const [activitiesData, setActivitiesData] = useState({})\n  // const [sessionData, setSessionData] = useState({})\n  // const [performanceData, setPerformanceData] = useState({})\n  // const [isDataLoading, setDataLoading] = useState(true)\n  //const [error, setError] = useState(false)\n  // useEffect(() => {\n  //     async function fetchActivities() {\n  //         setDataLoading(true)\n  //         try {\n  //             // ;<UserService\n  //             //     url={`http://localhost:3000/user/${props.match.params.userId.slice(\n  //             //         -2\n  //             //     )}`}\n  //             // />\n  //             // // const user = await UserService.logUser()\n  //             // // console.log(user)\n  //             const response = await fetch(\n  //                 `http://localhost:3000/user/${props.match.params.userId.slice(\n  //                     -2\n  //                 )}`\n  //             )\n  //             const { data } = await response.json()\n  //             setUserData(data)\n  //             const activitiesResponse = await fetch(\n  //                 `http://localhost:3000/user/${props.match.params.userId.slice(\n  //                     -2\n  //                 )}/activity`\n  //             )\n  //             const activitiesData = await activitiesResponse.json()\n  //             setActivitiesData(activitiesData.data)\n  //             const sessionResponse = await fetch(\n  //                 `http://localhost:3000/user/${props.match.params.userId.slice(\n  //                     -2\n  //                 )}/average-sessions`\n  //             )\n  //             const sessionData = await sessionResponse.json()\n  //             setSessionData(sessionData.data)\n  //             const performanceResponse = await fetch(\n  //                 `http://localhost:3000/user/${props.match.params.userId.slice(\n  //                     -2\n  //                 )}/performance`\n  //             )\n  //             const performanceData = await performanceResponse.json()\n  //             setPerformanceData(performanceData.data)\n  //         } catch (err) {\n  //             console.log('===== error =====', err)\n  //             setError(true)\n  //         } finally {\n  //             setDataLoading(false)\n  //         }\n  //     }\n  //     fetchActivities()\n  // }, [props.match.params.userId])\n  // if (error) {\n  //     return <span>Oups il y a eu un probl√®me</span>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(AsideNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full px-28 py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-5xl mb-5\",\n            children: [\"Bonjour\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-600\",\n              children: isLoaded ? userData.firstName : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"I'm Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-5\",\n            children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-4 gap-3 h-5/6\",\n          children: [isLoaded ? /*#__PURE__*/_jsxDEV(Weight, {\n            activitiesData: activitiesData.userSessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I'm Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rounded-md row-span-2 grid grid-row-4 gap-3\",\n            children: isLoaded ? /*#__PURE__*/_jsxDEV(KeyData, {\n              keyData: keyData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"I'm Loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), isLoaded ? /*#__PURE__*/_jsxDEV(Radar, {\n            performanceData: performanceData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I'm Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), isLoaded ? /*#__PURE__*/_jsxDEV(Score, {\n            userScore: userData.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I'm Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserInterface, \"/9ZjMaEcwwbqCPxm5zmzPanrdz4=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = UserInterface;\nexport default UserInterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInterface\");","map":{"version":3,"sources":["/Users/florent/Documents/Websites/FlorentMANUEL_12_04102021/src/pages/UserInterface.jsx"],"names":["AsideNav","Header","Weight","KeyData","Score","Radar","useFetch","useParams","UserInterface","props","userId","userData","keyData","activitiesData","performanceData","isLoaded","error","slice","console","log","cardio","firstName","userSessions","score"],"mappings":"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","sourcesContent":["import AsideNav from '../components/AsideNav'\nimport Header from '../components/Header'\nimport '../index.css'\nimport Weight from '../components/Weight'\n//import { useState, useEffect } from 'react'\nimport KeyData from '../components/KeyData'\n// import SessionDuration from '../components/SessionDuration'\nimport Score from '../components/Score'\nimport Radar from '../components/Radar'\nimport useFetch from '../services/UserService'\nimport { useParams } from 'react-router'\n\nfunction UserInterface(props) {\n    const { userId } = useParams()\n    const {\n        userData,\n        keyData,\n        activitiesData,\n        performanceData,\n        isLoaded,\n        error,\n    } = useFetch(userId.slice(-2))\n    console.log(performanceData.cardio)\n    //const { data } = userData\n\n    // const [userData, setUserData] = useState({})\n    // const [activitiesData, setActivitiesData] = useState({})\n    // const [sessionData, setSessionData] = useState({})\n    // const [performanceData, setPerformanceData] = useState({})\n    // const [isDataLoading, setDataLoading] = useState(true)\n    //const [error, setError] = useState(false)\n\n    // useEffect(() => {\n    //     async function fetchActivities() {\n    //         setDataLoading(true)\n    //         try {\n    //             // ;<UserService\n    //             //     url={`http://localhost:3000/user/${props.match.params.userId.slice(\n    //             //         -2\n    //             //     )}`}\n    //             // />\n    //             // // const user = await UserService.logUser()\n    //             // // console.log(user)\n    //             const response = await fetch(\n    //                 `http://localhost:3000/user/${props.match.params.userId.slice(\n    //                     -2\n    //                 )}`\n    //             )\n    //             const { data } = await response.json()\n    //             setUserData(data)\n\n    //             const activitiesResponse = await fetch(\n    //                 `http://localhost:3000/user/${props.match.params.userId.slice(\n    //                     -2\n    //                 )}/activity`\n    //             )\n    //             const activitiesData = await activitiesResponse.json()\n    //             setActivitiesData(activitiesData.data)\n\n    //             const sessionResponse = await fetch(\n    //                 `http://localhost:3000/user/${props.match.params.userId.slice(\n    //                     -2\n    //                 )}/average-sessions`\n    //             )\n    //             const sessionData = await sessionResponse.json()\n    //             setSessionData(sessionData.data)\n\n    //             const performanceResponse = await fetch(\n    //                 `http://localhost:3000/user/${props.match.params.userId.slice(\n    //                     -2\n    //                 )}/performance`\n    //             )\n    //             const performanceData = await performanceResponse.json()\n    //             setPerformanceData(performanceData.data)\n    //         } catch (err) {\n    //             console.log('===== error =====', err)\n    //             setError(true)\n    //         } finally {\n    //             setDataLoading(false)\n    //         }\n    //     }\n    //     fetchActivities()\n    // }, [props.match.params.userId])\n\n    // if (error) {\n    //     return <span>Oups il y a eu un probl√®me</span>\n    // }\n\n    return (\n        <>\n            <Header />\n            <main className=\"flex h-screen\">\n                <AsideNav />\n                <div className=\"w-full h-full px-28 py-8\">\n                    <div>\n                        <h1 className=\"text-5xl mb-5\">\n                            Bonjour{' '}\n                            <span className=\"text-red-600\">\n                                {isLoaded ? (\n                                    userData.firstName\n                                ) : (\n                                    <p>I'm Loading</p>\n                                )}\n                            </span>\n                        </h1>\n                        <h2 className=\"mb-5\">\n                            F√©licitation ! Vous avez explos√© vos objectifs hier\n                            üëè\n                        </h2>\n                    </div>\n                    <div className=\"grid grid-cols-4 gap-3 h-5/6\">\n                        {isLoaded ? (\n                            <Weight\n                                activitiesData={activitiesData.userSessions}\n                            />\n                        ) : (\n                            <p>I'm Loading</p>\n                        )}\n                        <div className=\"rounded-md row-span-2 grid grid-row-4 gap-3\">\n                            {isLoaded ? (\n                                <KeyData keyData={keyData} />\n                            ) : (\n                                <p>I'm Loading</p>\n                            )}\n                        </div>\n                        {/* {isDataLoading ? (\n                            <p>I'm Loading</p>\n                        ) : (\n                            <Weight activitiesData={activitiesData.sessions} />\n                        )}\n                        <div className=\"rounded-md row-span-2 grid grid-row-4 gap-3\">\n                            {isDataLoading ? (\n                                <p>I'm Loading</p>\n                            ) : (\n                                <KeyData userKeyData={userData.keyData} />\n                            )}\n                        </div>\n                        {isDataLoading ? (\n                            <p>I'm Loading</p>\n                        ) : (\n                            <SessionDuration\n                                sessionData={sessionData.sessions}\n                            />\n                        )}\n                        {isDataLoading ? (\n                            <p>I'm Loading</p>\n                        ) : (\n                            <Radar radarData={performanceData} />\n                        )}\n\n                        */}\n                        {isLoaded ? (\n                            <Radar performanceData={performanceData} />\n                        ) : (\n                            <p>I'm Loading</p>\n                        )}\n                        {isLoaded ? (\n                            <Score userScore={userData.score} />\n                        ) : (\n                            <p>I'm Loading</p>\n                        )}\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n}\n\nexport default UserInterface\n"]},"metadata":{},"sourceType":"module"}